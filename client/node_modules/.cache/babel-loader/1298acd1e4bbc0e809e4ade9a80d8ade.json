{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/covid19-datavis/client/src/components/WorldChart.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryScatter, createContainer } from 'victory';\nimport CountryChart from './CountryChart';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\nexport default class WorldChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      json: {},\n      countryCode: '',\n      firstLoad: true,\n      fileList: [{\n        value: '',\n        display: '-- Select a dataset --'\n      }],\n      selectedFile: '',\n      countryList: [{\n        value: '',\n        display: '-- Select a country --'\n      }],\n      selectedCountry: '',\n      totalDeaths: '',\n      totalRecovered: '',\n      totalConfirmed: '',\n      newCountryName: '',\n      newTotalDeaths: '',\n      newTotalRecovered: '',\n      newTotalConfirmed: '',\n      selectedBubbleMetric: 'amount'\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    this.handleSave = this.handleSave.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleRestore = this.handleRestore.bind(this);\n    this.bubbleChartData = this.bubbleChartData.bind(this);\n    this.handleDeathsChange = this.handleDeathsChange.bind(this);\n    this.handleRecoveredChange = this.handleRecoveredChange.bind(this);\n    this.handleConfirmedChange = this.handleConfirmedChange.bind(this);\n    this.updateCountryData = this.updateCountryData.bind(this);\n    this.handleNewCountryName = this.handleNewCountryName.bind(this);\n    this.handleNewDeathsChange = this.handleNewDeathsChange.bind(this);\n    this.handleNewRecoveredChange = this.handleNewRecoveredChange.bind(this);\n    this.handleNewConfirmedChange = this.handleNewConfirmedChange.bind(this);\n    this.addCountry = this.addCountry.bind(this);\n  }\n\n  bubbleChartData(json, metric) {\n    // console.log(JSON.stringify(json[0]));\n    let array = json;\n    let bubbleData = array.map(obj => ({\n      x: obj[metric],\n      y: obj.TotalDeaths,\n      amount: obj.TotalConfirmed,\n      country: obj.Country,\n      countryCode: obj.CountryCode\n    })); // console.log(bubbleData);\n\n    return bubbleData;\n  } // handleChange(event) {\n  //     this.setState({\n  //         countryCode: event.target.value\n  //     });\n  //     console.log(event.target.value);\n  //     console.log(this.state.countryCode);\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  async callDB() {\n    await fetch(\"http://localhost:9000/worldDB\").then(res => {\n      return res.json();\n    }).then(json => {\n      this.setState({\n        json: Array.from(json)\n      });\n    }).catch(err => err);\n  }\n\n  findMax(array, prop) {\n    // if (array.length !== 0){\n    let maxObj = array.reduce((max, val) => val[prop] > max[prop] ? val : max);\n    let max = maxObj[prop];\n    console.log(max);\n    return max; // }\n  }\n\n  async handleReset(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB?reset=true\";\n    await fetch(url, {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      console.log('reset:');\n      console.log(JSON.stringify(dataJson));\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async handleRefresh(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB\";\n    await fetch(url).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async handleRestore(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB?restore=true&file=\" + this.state.selectedFile;\n    await fetch(url, {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      console.log('restore');\n      console.log(JSON.stringify(dataJson));\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async handleSave(event) {\n    // event.preventDefault();\n    let url = \"http://localhost:9000/worldDB?save=true\";\n    await fetch(url, {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      console.log('saved');\n      return dataJson;\n    }).catch(err => err);\n  }\n\n  async loadCountries() {\n    let url = \"http://localhost:9000/worldDB/countrylist\";\n    await fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      let countryList = data.map(country => {\n        return {\n          value: country.Country,\n          display: country.Country\n        };\n      });\n      this.setState({\n        countryList: [{\n          value: '',\n          display: '-- Select a country --'\n        }].concat(countryList)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async loadFileNames() {\n    let url = \"http://localhost:9000/worldDB/filelist\";\n    await fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      let fileList = data.map(file => {\n        return {\n          value: file,\n          display: file\n        };\n      });\n      this.setState({\n        fileList: [{\n          value: '',\n          display: '-- Select a dataset --'\n        }].concat(fileList)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async loadCountryData() {\n    console.log('country data loaded');\n    let url = \"http://localhost:9000/worldDB/country?name=\" + this.state.selectedCountry;\n    await fetch(url).then(response => {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        totalRecovered: dataJson[0].TotalRecovered,\n        totalDeaths: dataJson[0].TotalDeaths,\n        totalConfirmed: dataJson[0].TotalConfirmed // countryData: dataJson,\n\n      });\n    });\n  }\n\n  handleDeathsChange(event) {\n    this.setState({\n      totalDeaths: Number(event.target.value)\n    });\n  }\n\n  handleRecoveredChange(event) {\n    this.setState({\n      totalRecovered: Number(event.target.value)\n    });\n  }\n\n  handleConfirmedChange(event) {\n    this.setState({\n      totalConfirmed: Number(event.target.value)\n    });\n  }\n\n  handleNewCountryName(event) {\n    console.log(event.target.value);\n    this.setState({\n      newCountryName: event.target.value\n    });\n  }\n\n  handleNewDeathsChange(event) {\n    this.setState({\n      newTotalDeaths: Number(event.target.value)\n    });\n  }\n\n  handleNewRecoveredChange(event) {\n    this.setState({\n      newTotalRecovered: Number(event.target.value)\n    });\n  }\n\n  handleNewConfirmedChange(event) {\n    this.setState({\n      newTotalConfirmed: Number(event.target.value)\n    });\n  }\n\n  async updateCountryDataRequest() {\n    let url = \"http://localhost:9000/worldDB/country?name=\" + this.state.selectedCountry;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        totalDeaths: this.state.totalDeaths,\n        totalRecovered: this.state.totalRecovered,\n        totalConfirmed: this.state.totalConfirmed\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      console.log(Array.from(dataJson));\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async addCountryRequest() {\n    let url = \"http://localhost:9000/worldDB/addcountry\";\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        Country: this.state.newCountryName,\n        TotalConfirmed: this.state.newTotalConfirmed,\n        TotalDeaths: this.state.newTotalDeaths,\n        TotalRecovered: this.state.newTotalRecovered\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      console.log(JSON.stringify(dataJson));\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async updateCountryData(event) {\n    event.preventDefault();\n    await this.updateCountryDataRequest();\n  }\n\n  async addCountry(event) {\n    event.preventDefault();\n    await this.addCountryRequest();\n  }\n\n  async componentDidMount() {\n    // // pulls data from public api on refresh\n    // if (this.state.firstLoad) {\n    //     const url = \"https://api.covid19api.com/summary\";\n    //     const response = await fetch(url);\n    //     const data = await response.json();\n    //     this.setState({loading: false, json: data.Countries, firstLoad: false});\n    // }\n    await this.callDB();\n    await this.loadFileNames();\n    await this.loadCountries();\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    if (this.state.countryCode !== '') {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setState({\n          countryCode: ''\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, \"Back to World Chart\"), /*#__PURE__*/React.createElement(CountryChart, {\n        countryCode: this.state.countryCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          padding: \"5%\",\n          marginTop: -50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(VictoryChart, {\n        style: {\n          parent: {\n            maxWidth: \"70%\"\n          }\n        },\n        height: 400,\n        width: 500,\n        padding: 100,\n        theme: VictoryTheme.material,\n        animate: {\n          duration: 1000\n        },\n        domain: {\n          x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x') * 1.2],\n          y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y') * 1.2]\n        },\n        containerComponent: /*#__PURE__*/React.createElement(VictoryZoomVoronoiContainer, {\n          zoomDomain: {\n            x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x') * 1.2],\n            y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y') * 1.2]\n          },\n          labels: ({\n            datum\n          }) => {\n            if (this.state.selectedBubbleMetric == 'amount') {\n              return `${datum.country}: ${datum.amount} confirmed case(s)`;\n            } else if (this.state.selectedBubbleMetric == 'x') {\n              return `${datum.country}: ${datum.x} recoveries`;\n            } else {\n              return `${datum.country}: ${datum.y} deaths`;\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(VictoryLabel, {\n        fontSize: 10,\n        x: 250,\n        y: 60,\n        textAnchor: \"middle\",\n        text: \"World: Total Deaths vs Recoveries per Country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        style: sharedAxisStyles,\n        tickFormat: x => `${x / 1000}k`,\n        label: \"Total Recoveries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        dependentAxis: true,\n        tickFormat: (x, i, ticks) => `${x / 1000}k`,\n        label: \"Total Deaths\",\n        style: sharedAxisStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryScatter, {\n        style: {\n          data: {\n            fill: \"#c43a31\",\n            opacity: \"50%\"\n          }\n        },\n        bubbleProperty: this.state.selectedBubbleMetric,\n        maxBubbleSize: 20,\n        minBubbleSize: 1,\n        data: this.bubbleChartData(this.state.json, 'TotalRecovered'),\n        events: [{\n          target: 'data',\n          eventHandlers: {\n            onClick: (event, data) => {\n              let cCode = data.datum.countryCode;\n              console.log(cCode);\n              this.setState({\n                countryCode: cCode\n              });\n            }\n          }\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: \"20%\",\n          marginTop: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }\n      }, \" Bubble Size:\", /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          padding: 3,\n          margin: 20\n        },\n        value: this.state.selectedDataFile,\n        onChange: async e => {\n          await this.setState({\n            selectedBubbleMetric: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }\n      }, \">\", /*#__PURE__*/React.createElement(\"option\", {\n        key: \"Confirmed\",\n        value: \"amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 33\n        }\n      }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"option\", {\n        key: \"Recovered\",\n        value: \"x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 33\n        }\n      }, \"Recoveries\"), /*#__PURE__*/React.createElement(\"option\", {\n        key: \"Deaths\",\n        value: \"y\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 33\n        }\n      }, \"Deaths\"))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRefresh,\n        style: {\n          margin: 10,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      }, \"Refresh\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSave,\n        style: {\n          margin: 10,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 25\n        }\n      }, \"Save Dataset\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleReset,\n        style: {\n          margin: 10,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 25\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          padding: 3,\n          margin: 20\n        },\n        value: this.state.selectedDataFile,\n        onChange: async e => {\n          await this.setState({\n            selectedFile: e.target.value\n          });\n\n          if (this.state.selectedFile !== '') {\n            this.loadFileNames();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 29\n        }\n      }, \">\", this.state.fileList.map(file => /*#__PURE__*/React.createElement(\"option\", {\n        key: file.value,\n        value: file.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 33\n        }\n      }, file.display))), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRestore,\n        style: {\n          margin: 8,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }, \"Restore\")), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          padding: 3,\n          margin: 20\n        },\n        value: this.state.selectedCountry,\n        onChange: async e => {\n          await this.setState({\n            selectedCountry: e.target.value\n          });\n\n          if (this.state.selectedCountry !== '') {\n            this.loadCountryData();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 29\n        }\n      }, \">\", console.log(this.state.selectedCountry), this.state.countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n        key: country.value,\n        value: country.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 33\n        }\n      }, country.display)))), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.updateCountryData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }\n      }, \"Deaths:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.totalDeaths,\n        onChange: this.handleDeathsChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 33\n        }\n      }, \"Recovered:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.totalRecovered,\n        onChange: this.handleRecoveredChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 33\n        }\n      }, \"Confirmed:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.totalConfirmed,\n        onChange: this.handleConfirmedChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update\",\n        style: {\n          margin: 10,\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.addCountry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 55\n        }\n      }, \"Add a Country\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 33\n        }\n      }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newCountryName,\n        onChange: this.handleNewCountryName,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 33\n        }\n      }, \"Deaths:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newTotalDeaths,\n        onChange: this.handleNewDeathsChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 33\n        }\n      }, \"Recovered:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newTotalRecovered,\n        onChange: this.handleNewRecoveredChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 33\n        }\n      }, \"Confirmed:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newTotalConfirmed,\n        onChange: this.handleNewConfirmedChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        style: {\n          margin: 10,\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/covid19-datavis/client/src/components/WorldChart.js"],"names":["React","VictoryChart","VictoryAxis","VictoryTheme","VictoryLabel","VictoryScatter","createContainer","CountryChart","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","VictoryZoomVoronoiContainer","WorldChart","Component","constructor","props","state","loading","json","countryCode","firstLoad","fileList","value","display","selectedFile","countryList","selectedCountry","totalDeaths","totalRecovered","totalConfirmed","newCountryName","newTotalDeaths","newTotalRecovered","newTotalConfirmed","selectedBubbleMetric","handleSave","bind","handleSubmit","handleRefresh","handleReset","handleRestore","bubbleChartData","handleDeathsChange","handleRecoveredChange","handleConfirmedChange","updateCountryData","handleNewCountryName","handleNewDeathsChange","handleNewRecoveredChange","handleNewConfirmedChange","addCountry","metric","array","bubbleData","map","obj","x","y","TotalDeaths","amount","TotalConfirmed","country","Country","CountryCode","event","preventDefault","callDB","fetch","then","res","setState","Array","from","catch","err","findMax","prop","maxObj","reduce","max","val","console","log","url","method","response","dataJson","JSON","stringify","loadCountries","data","concat","error","loadFileNames","file","loadCountryData","TotalRecovered","Number","target","updateCountryDataRequest","body","headers","addCountryRequest","componentDidMount","render","flexWrap","marginTop","parent","maxWidth","material","duration","datum","i","ticks","fill","opacity","eventHandlers","onClick","cCode","minWidth","margin","selectedDataFile","e","width","float"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryTheme, \n     VictoryLabel,\n     VictoryScatter,\n     createContainer,\n    } from 'victory';\nimport CountryChart from './CountryChart'\n\nconst sharedAxisStyles = {\n    tickLabels: {\n        fontSize: 10\n    },\n    axisLabel: {\n        padding: 45,\n        fontSize: 10,\n        fontStyle: \"italic\"\n    }\n    };\n\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n    \n\n\nexport default class WorldChart extends React.Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n        loading: true,\n        json: {},\n        countryCode: '',\n        firstLoad: true,\n        fileList: [{value: '', display: '-- Select a dataset --'}],\n        selectedFile: '',\n        countryList: [{value: '', display: '-- Select a country --'}],\n        selectedCountry: '',\n        totalDeaths: '',\n        totalRecovered: '',\n        totalConfirmed: '',\n        newCountryName: '',\n        newTotalDeaths: '',\n        newTotalRecovered: '',\n        newTotalConfirmed: '',\n        selectedBubbleMetric: 'amount',\n    };\n        // this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleRefresh = this.handleRefresh.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleRestore = this.handleRestore.bind(this);\n        this.bubbleChartData = this.bubbleChartData.bind(this);\n        this.handleDeathsChange = this.handleDeathsChange.bind(this);\n        this.handleRecoveredChange = this.handleRecoveredChange.bind(this);\n        this.handleConfirmedChange = this.handleConfirmedChange.bind(this);\n        this.updateCountryData = this.updateCountryData.bind(this);\n        this.handleNewCountryName = this.handleNewCountryName.bind(this);\n        this.handleNewDeathsChange = this.handleNewDeathsChange.bind(this);\n        this.handleNewRecoveredChange = this.handleNewRecoveredChange.bind(this);\n        this.handleNewConfirmedChange = this.handleNewConfirmedChange.bind(this);\n        this.addCountry = this.addCountry.bind(this);\n    }\n\n    bubbleChartData(json, metric) {\n        // console.log(JSON.stringify(json[0]));\n        let array = json;\n        let bubbleData = array.map(obj => ({\n            x: obj[metric],\n            y: obj.TotalDeaths,  \n            amount: obj.TotalConfirmed, \n            country: obj.Country,\n            countryCode: obj.CountryCode\n        }));\n        // console.log(bubbleData);\n        return bubbleData;\n    }\n\n    // handleChange(event) {\n    //     this.setState({\n    //         countryCode: event.target.value\n    //     });\n    //     console.log(event.target.value);\n    //     console.log(this.state.countryCode);\n    // }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async callDB() {\n        await fetch(\"http://localhost:9000/worldDB\")\n            .then(res => {\n                return res.json();\n            }).then(json => {\n                this.setState({json: Array.from(json)});\n            }).catch(err => err);\n    }\n\n    findMax(array, prop){\n        // if (array.length !== 0){\n            let maxObj = array.reduce((max, val) => val[prop] > max[prop] ? val : max);\n            let max = maxObj[prop];\n            console.log(max);\n            return max;\n        // }\n    }\n\n    async handleReset(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB?reset=true\"\n        await fetch(url, {\n            method: 'POST'\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            console.log('reset:')\n            console.log(JSON.stringify(dataJson));\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async handleRefresh(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB\";\n        await fetch(url)\n        .then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async handleRestore(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB?restore=true&file=\" + this.state.selectedFile;\n        await fetch(url, {\n            method: 'POST'\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            console.log('restore');\n            console.log(JSON.stringify(dataJson));\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async handleSave(event) {\n        // event.preventDefault();\n        let url = \"http://localhost:9000/worldDB?save=true\"\n        await fetch(url, {\n            method: 'POST'\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            console.log('saved');\n            return dataJson\n        }).catch(err => err);\n    }\n\n   async loadCountries() {\n        let url = \"http://localhost:9000/worldDB/countrylist\";\n        await fetch(url)\n        .then((response) => {\n            return response.json();\n        }).then(data => {\n            let countryList = data.map(country => {\n              return {value: country.Country, display: country.Country}\n            });\n            this.setState({\n              countryList: [{value: '', display: '-- Select a country --'}].concat(countryList)\n            });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    async loadFileNames() {\n        let url = \"http://localhost:9000/worldDB/filelist\";\n        await fetch(url)\n        .then((response) => {\n            return response.json();\n        }).then(data => {\n            let fileList = data.map(file => {\n              return {value: file, display: file}\n            });\n            this.setState({\n              fileList: [{value: '', display: '-- Select a dataset --'}].concat(fileList)\n            });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    async loadCountryData() {\n        console.log('country data loaded');\n        let url = \"http://localhost:9000/worldDB/country?name=\"+this.state.selectedCountry;\n        await fetch(url)\n        .then((response) => {\n            return response.json();\n        }).then(dataJson => {\n            this.setState({\n                totalRecovered: dataJson[0].TotalRecovered,\n                totalDeaths: dataJson[0].TotalDeaths,\n                totalConfirmed: dataJson[0].TotalConfirmed,\n                // countryData: dataJson,\n            })\n        })\n    }\n\n    handleDeathsChange(event){\n        this.setState({totalDeaths: Number(event.target.value)});\n    }\n    handleRecoveredChange(event){\n        this.setState({totalRecovered:  Number(event.target.value)});\n    }\n    handleConfirmedChange(event){\n        this.setState({totalConfirmed:  Number(event.target.value)});\n    }\n    handleNewCountryName(event){\n        console.log(event.target.value);\n        this.setState({newCountryName: event.target.value});\n    }\n    handleNewDeathsChange(event){\n        this.setState({newTotalDeaths: Number(event.target.value)});\n    }\n    handleNewRecoveredChange(event){\n        this.setState({newTotalRecovered: Number(event.target.value)});\n    }\n    handleNewConfirmedChange(event){\n        this.setState({newTotalConfirmed: Number(event.target.value)});\n    }\n\n    async updateCountryDataRequest() {\n        let url = \"http://localhost:9000/worldDB/country?name=\"+this.state.selectedCountry;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                totalDeaths: this.state.totalDeaths,\n                totalRecovered: this.state.totalRecovered,\n                totalConfirmed: this.state.totalConfirmed,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            console.log(Array.from(dataJson));\n            this.setState({json: Array.from(dataJson)});\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async addCountryRequest() {\n        let url = \"http://localhost:9000/worldDB/addcountry\";\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                Country: this.state.newCountryName,\n                TotalConfirmed: this.state.newTotalConfirmed,\n                TotalDeaths: this.state.newTotalDeaths,\n                TotalRecovered: this.state.newTotalRecovered,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            console.log(JSON.stringify(dataJson));\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async updateCountryData(event){\n        event.preventDefault();\n        await this.updateCountryDataRequest();\n    }\n\n    async addCountry(event){\n        event.preventDefault();\n        await this.addCountryRequest();\n    }\n\n    async componentDidMount() {\n        // // pulls data from public api on refresh\n        // if (this.state.firstLoad) {\n        //     const url = \"https://api.covid19api.com/summary\";\n        //     const response = await fetch(url);\n        //     const data = await response.json();\n        //     this.setState({loading: false, json: data.Countries, firstLoad: false});\n        // }\n        await this.callDB();\n        await this.loadFileNames();\n        await this.loadCountries();\n        this.setState({loading: false});\n    }\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        if (this.state.countryCode !== ''){\n            return(\n            <>\n                <button onClick= {() => this.setState({countryCode: ''})}>Back to World Chart</button>\n                <CountryChart countryCode={this.state.countryCode}/>\n            </>\n            );\n        } else {\n            return (\n                <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"5%\", marginTop: -50 }}>\n                    <VictoryChart\n                        style={{ parent: { maxWidth: \"70%\" }}}\n                        height={400}\n                        width={500}\n                        padding={100}\n                        theme={\n                            VictoryTheme.material\n                        }\n                        animate={{\n                            duration: 1000\n                        }}\n                        domain={{\n                            x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x') * 1.2],\n                            y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y') * 1.2]\n                        }}\n                        containerComponent={\n                            <VictoryZoomVoronoiContainer \n                                zoomDomain={{\n                                    x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x')*1.2],\n                                    y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y')*1.2]\n                                }}\n                                labels={({ datum }) => {\n                                    if (this.state.selectedBubbleMetric == 'amount'){\n                                        return `${datum.country}: ${datum.amount} confirmed case(s)`\n                                    } else if (this.state.selectedBubbleMetric == 'x'){\n                                        return `${datum.country}: ${datum.x} recoveries`\n                                    } else {\n                                        return `${datum.country}: ${datum.y} deaths`\n                                    }\n                                }}\n                            />\n                        }\n                    >   \n                        <VictoryLabel\n                            fontSize={10}\n                            x={250}\n                            y={60}\n                            textAnchor=\"middle\"\n                            text=\"World: Total Deaths vs Recoveries per Country\"\n                        />\n                        <VictoryAxis\n                            style={sharedAxisStyles}\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Recoveries\"\n                        ></VictoryAxis>\n                        <VictoryAxis\n                            dependentAxis\n                            tickFormat={(x, i, ticks) => (`${x / 1000}k`)}\n                            label=\"Total Deaths\"\n                            style={sharedAxisStyles}\n                        ></VictoryAxis>\n                        <VictoryScatter\n                            style={{ data: { fill: \"#c43a31\", opacity: \"50%\" } }}\n                            bubbleProperty={this.state.selectedBubbleMetric}\n                            maxBubbleSize={20}\n                            minBubbleSize={1}\n                            data={this.bubbleChartData(this.state.json, 'TotalRecovered')}\n                            events={[{\n                                target: 'data',\n                                eventHandlers: {\n                                    onClick: (event, data) => {\n                                        let cCode = data.datum.countryCode\n                                        console.log(cCode);\n                                        this.setState({countryCode: cCode});\n                                    },\n                                },\n                            }]}\n                        >\n                        </VictoryScatter>\n                    </VictoryChart>\n                    <div style={{minWidth: \"20%\", marginTop: 80}}>\n                        <div> Bubble Size: \n                            <select \n                                style={{padding:3, margin: 20}}\n                                value={this.state.selectedDataFile}\n                                onChange={async(e) => {\n                                    await this.setState({selectedBubbleMetric: e.target.value});\n                                }}>\n                            >\n                                \n                                <option key='Confirmed' value='amount'>Confirmed</option>\n                                <option key='Recovered' value='x'>Recoveries</option>\n                                <option key='Deaths' value='y'>Deaths</option>\n                            </select>\n                        </div>\n                        <hr></hr>\n                        <button onClick={this.handleRefresh} style={{margin: 10, padding: 5}}>Refresh</button>\n                        <button onClick={this.handleSave} style={{margin: 10, padding: 5}}>Save Dataset</button>\n                        <button onClick={this.handleReset} style={{margin: 10, padding: 5}}>Reset</button>\n                        \n                        <div>\n                            <select \n                                style={{padding:3, margin: 20}}\n                                value={this.state.selectedDataFile}\n                                onChange={async(e) => {\n                                    await this.setState({selectedFile: e.target.value});\n                                    if (this.state.selectedFile !== ''){\n                                        this.loadFileNames();\n                                    }\n                                }}>\n                            >\n                                {this.state.fileList.map((file) => \n                                <option key={file.value} value={file.value}>{file.display}</option>\n                                )}\n                            </select>\n                            <button onClick={this.handleRestore} style={{margin: 8, padding: 5}}>Restore</button>\n                        </div>\n                        <hr></hr>\n                        <div>\n                            <select \n                                style={{padding:3, margin: 20}}\n                                value={this.state.selectedCountry}\n                                onChange={async(e) => {\n                                    await this.setState({selectedCountry: e.target.value});\n                                    if (this.state.selectedCountry !== ''){\n                                        this.loadCountryData();\n                                    }\n                                }}>\n                            >\n                                {console.log(this.state.selectedCountry)}\n                                {this.state.countryList.map((country) => \n                                <option key={country.value} value={country.value}>{country.display}</option>\n                                )}\n                            </select>\n                        </div>\n                        <form onSubmit={this.updateCountryData}>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Deaths:  \n                                </label>\n                                <input type=\"text\" value={this.state.totalDeaths} onChange={this.handleDeathsChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Recovered:\n                                </label>\n                                <input type=\"text\" value={this.state.totalRecovered} onChange={this.handleRecoveredChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Confirmed:\n                                </label>\n                                <input type=\"text\" value={this.state.totalConfirmed} onChange={this.handleConfirmedChange} style={{margin: 10}}/>\n                            </div>\n                            \n                            <input type=\"submit\" value=\"Update\" style={{margin: 10, float: 'right'}}/>\n                        </form>\n                        <br/><br/>\n                        <hr></hr>\n                        <form onSubmit={this.addCountry}>\n                            <div style={{margin: 10}}><strong>Add a Country</strong></div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Name:  \n                                </label>\n                                <input type=\"text\" value={this.state.newCountryName} onChange={this.handleNewCountryName} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Deaths:  \n                                </label>\n                                <input type=\"text\" value={this.state.newTotalDeaths} onChange={this.handleNewDeathsChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Recovered:\n                                </label>\n                                <input type=\"text\" value={this.state.newTotalRecovered} onChange={this.handleNewRecoveredChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Confirmed:\n                                </label>\n                                <input type=\"text\" value={this.state.newTotalConfirmed} onChange={this.handleNewConfirmedChange} style={{margin: 10}}/>\n                            </div>\n                            \n                            <input type=\"submit\" value=\"Add\" style={{margin: 10, float: 'right'}}/>\n                        </form>\n                    </div>\n                </div>\n            ); \n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}