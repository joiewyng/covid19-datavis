{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js\";\nimport React from 'react';\nexport default class ManageData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.state = {\n      loading: true,\n      apiLink: '',\n      apiJson: '',\n      dbName: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // pull data from API at [url], set to json, update state apiJson\n  async apiToJson(url) {\n    // await fetch(url).then(function(response){\n    //     return response.json();\n    // }).then(function(data){\n    //     console.log(data);\n    //     this.setState({loading: false, apiJson: data});\n    // }).catch(function(err){\n    //     console.log('unable to fetch data from API: ' + err);\n    // });\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log('get: success');\n    console.log(data);\n    this.setState({\n      loading: false,\n      apiJson: data\n    });\n  }\n\n  async handleSubmit(event) {\n    console.log(this.state.dbName);\n    event.preventDefault();\n    let url = this.state.apiLink;\n    console.log(\"huh\");\n    await this.apiToJson(url);\n    await fetch(\"http://localhost:9000/testDB\", {\n      method: 'POST',\n      body: JSON.stringify({\n        name: this.state.dbName,\n        json: this.state.apiJson\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('post: success');\n      console.log(response);\n      return response.json();\n    }).catch(function (err) {\n      console.log('failed to send form data to Node: ' + err);\n    });\n    alert('An API link was submitted: ' + url + '. Submitted DB name: ' + this.state.dbName);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        margin: 30\n      },\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"DB Name: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"dbName\",\n      value: this.state.dbName,\n      onChange: this.handleChange('dbName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"API Link: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"apiLink\",\n      value: this.state.apiLink,\n      onChange: this.handleChange('apiLink'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Initialize Database\",\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js"],"names":["React","ManageData","Component","constructor","props","handleChange","prop","event","setState","target","value","state","loading","apiLink","apiJson","dbName","bind","handleSubmit","apiToJson","url","response","fetch","data","json","console","log","preventDefault","method","body","JSON","stringify","name","headers","then","catch","err","alert","render","margin"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default class ManageData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            apiLink: '',\n            apiJson: '',\n            dbName: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n\n    handleChange = prop => (event) => {\n        this.setState({[prop]: event.target.value});\n    }\n    \n    // pull data from API at [url], set to json, update state apiJson\n    async apiToJson (url) {\n        // await fetch(url).then(function(response){\n        //     return response.json();\n        // }).then(function(data){\n        //     console.log(data);\n        //     this.setState({loading: false, apiJson: data});\n        // }).catch(function(err){\n        //     console.log('unable to fetch data from API: ' + err);\n        // });\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log('get: success')\n        console.log(data);\n        this.setState({loading: false, apiJson: data});\n    }\n\n    async handleSubmit(event) {\n        console.log(this.state.dbName);\n        event.preventDefault();\n        let url = this.state.apiLink;\n        console.log(\"huh\");\n        await this.apiToJson(url);\n        await fetch(\"http://localhost:9000/testDB\", {\n            method: 'POST',\n            body: JSON.stringify({\n                name: this.state.dbName,\n                json: this.state.apiJson,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('post: success')\n            console.log(response)\n            return response.json()\n          }).catch(function(err){\n              console.log('failed to send form data to Node: '+err);\n          });\n          alert('An API link was submitted: ' + url+'. Submitted DB name: '+this.state.dbName);\n        \n    }\n\n    render(){\n        return (\n            <form style={{margin: 30}} onSubmit={this.handleSubmit}>\n                <label style={{margin: 15}}>\n                    DB Name: &nbsp;\n                    <input type=\"text\" name=\"dbName\" value={this.state.dbName} onChange={this.handleChange('dbName')}/>\n                </label>\n                <label style={{margin: 15}}>\n                    API Link: &nbsp;\n                    <input type=\"text\" name=\"apiLink\" value={this.state.apiLink} onChange={this.handleChange('apiLink')}/>\n                </label>\n                <input type=\"submit\" value=\"Initialize Database\" style={{margin: 15}}/>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}