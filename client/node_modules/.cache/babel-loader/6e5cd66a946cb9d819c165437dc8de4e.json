{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/USADataDb.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryTheme, VictoryVoronoiContainer, VictoryLabel } from 'victory';\nimport Manage from './Manage';\n\nclass ManageUSAData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      apiLink: '',\n      apiJson: '',\n      dbName: 'covidUSA',\n      deleteDb: false,\n      refreshChart: false\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n\n  async handleRefresh(event) {\n    event.preventDefault();\n    await this.setState({\n      refreshChart: true\n    });\n    let url = \"http://localhost:9000/testDB?refreshUSAchart=\" + this.state.refreshChart;\n    await fetch(url).then(function (response) {\n      return response.json();\n    }).then(json => {\n      this.props.setJson(json);\n    }).catch(err => err);\n  }\n\n  componentDidMount() {\n    console.log(\"manageData mount called\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        margin: 30\n      },\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleRefresh,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Refresh\")));\n  }\n\n}\n\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\n\nfunction configData(json) {\n  const data = [];\n  let endIdx = json.length - 1;\n\n  for (let i = endIdx; i >= 0; i--) {\n    let idx = endIdx - i;\n    let obj = json[idx];\n    let posIncr = i === 0 ? 0 : obj.positive - json[idx + 1].positive;\n    let recovIncr = i === 0 ? 0 : obj.recovered - json[idx + 1].recovered;\n    let deathIncr = i === 0 ? 0 : obj.death - json[idx + 1].death;\n    let state = obj.state ? '' : obj.state;\n    data.push({\n      index: i,\n      date: obj.date,\n      positive: obj.positive,\n      posIncr: posIncr,\n      recovered: obj.recovered,\n      recovIncr: recovIncr,\n      death: obj.death,\n      deathIncr: deathIncr,\n      state: state\n    });\n  }\n\n  return data;\n}\n\nfunction date(index, json) {\n  let date = json[json.length - 1 - index].date.toString();\n  date = date.substr(4, 2) + \"/\" + date.substr(6) + \"/\" + date.substr(0, 4);\n  return date;\n}\n\nexport default class USADataDb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      json: {}\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading || this.state.json.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ManageUSAData, {\n      setJson: this.handleJson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        paddingLeft: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(VictoryChart, {\n      height: 400,\n      width: 400,\n      padding: 100,\n      theme: VictoryTheme.material,\n      animate: {\n        duration: 1000\n      },\n      containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n        labels: ({\n          datum\n        }) => `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }),\n      style: {\n        parent: {\n          maxWidth: \"30%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryLabel, {\n      fontSize: 10,\n      x: 200,\n      y: 60,\n      textAnchor: \"middle\",\n      text: \"USA: Number of Positive Cases over Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      style: sharedAxisStyles,\n      tickValues: [0, this.state.json.length],\n      tickFormat: [date(0, this.state.json), date(this.state.json.length - 1, this.state.json)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `${x / 1000}k`,\n      label: \"Number of New Cases\",\n      style: sharedAxisStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: configData(this.state.json),\n      x: \"index\",\n      y: \"positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/USADataDb.js"],"names":["React","VictoryChart","VictoryAxis","VictoryBar","VictoryTheme","VictoryVoronoiContainer","VictoryLabel","Manage","ManageUSAData","Component","constructor","props","state","loading","apiLink","apiJson","dbName","deleteDb","refreshChart","handleRefresh","bind","event","preventDefault","setState","url","fetch","then","response","json","setJson","catch","err","componentDidMount","console","log","render","margin","handleSubmit","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","configData","data","endIdx","length","i","idx","obj","posIncr","positive","recovIncr","recovered","deathIncr","death","push","index","date","toString","substr","USADataDb","handleJson","display","flexWrap","paddingLeft","material","duration","datum","parent","maxWidth","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryBar, \n     VictoryTheme, \n     VictoryVoronoiContainer,\n     VictoryLabel,\n    } from 'victory';\nimport Manage from './Manage';\n\nclass ManageUSAData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            apiLink: '',\n            apiJson: '',\n            dbName: 'covidUSA',\n            deleteDb: false,\n            refreshChart: false\n        };\n    \n\n        this.handleRefresh = this.handleRefresh.bind(this);\n    }\n    \n    async handleRefresh(event) {\n        event.preventDefault();\n        await this.setState({refreshChart: true});\n        let url = \"http://localhost:9000/testDB?refreshUSAchart=\" + this.state.refreshChart;\n        await fetch(url)\n        .then(function(response){\n            return response.json();\n        }).then(json => {\n            this.props.setJson(json);\n        }).catch(err => err);\n    }\n\n    componentDidMount(){\n        console.log(\"manageData mount called\")\n    }\n\n    render(){\n        return (\n            <div>\n                <form style={{margin: 30}} onSubmit={this.handleSubmit}>\n                    <button onClick={this.handleRefresh} style={{margin: 15}}>Refresh</button>\n                </form>\n                {/* <BubbleChartDb/> */}\n            </div> \n        );\n    }\n}\n\nconst sharedAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 45,\n      fontSize: 10,\n      fontStyle: \"italic\"\n    }\n  };\n\nfunction configData(json) {\n    const data = [];\n    let endIdx = json.length-1;\n    for (let i = endIdx; i >= 0; i--){\n        let idx = endIdx-i;\n        let obj = json[idx];\n        let posIncr = (i===0 ? 0 : (obj.positive - json[idx+1].positive));\n        let recovIncr = (i===0 ? 0 : (obj.recovered - json[idx+1].recovered));\n        let deathIncr = (i===0 ? 0 : (obj.death - json[idx+1].death));\n        let state = (obj.state ? '' : obj.state);\n        data.push({\n            index: i,\n            date: obj.date,\n            positive: obj.positive, \n            posIncr: posIncr,\n            recovered: obj.recovered,\n            recovIncr: recovIncr,\n            death: obj.death,\n            deathIncr: deathIncr,\n            state: state\n        });\n    }\n    return data;\n}\n\nfunction date(index, json){\n    let date = json[json.length-1-index].date.toString();\n    date = date.substr(4,2) + \"/\" + date.substr(6) + \"/\" + date.substr(0,4);\n    return date;\n}\nexport default class USADataDb extends React.Component {\n    state = {\n        loading: true,\n        json: {}\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    \n\n    async componentDidMount() {\n        this.setState({\n            loading: false,\n        });\n    }\n\n    render() {\n        if (this.state.loading || this.state.json.length === 0){\n            return(<div>loading...</div>);\n        }\n\n        return (\n\n        <> \n       \n            \n            <ManageUSAData setJson={this.handleJson}/>\n           <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: '10%' }}>\n\n            {/* Bar Chart: Change in Positive Cases of COVID-19 USA */}\n            <VictoryChart\n            height={400}\n            width={400}\n            padding={100}\n            theme={VictoryTheme.material}\n            animate={{\n                duration: 1000\n            }}\n            containerComponent={\n                <VictoryVoronoiContainer\n                  labels={({ datum }) => \n                  `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`\n            }\n                />\n              }\n            style={{ parent: { maxWidth: \"30%\" } }}\n            >\n                 <VictoryLabel\n                    fontSize={10}\n                    x={200}\n                    y={60}\n                    textAnchor=\"middle\"\n                    text=\"USA: Number of Positive Cases over Time\"\n                />\n                <VictoryAxis\n                    style={sharedAxisStyles}\n                    tickValues={[0, this.state.json.length]}\n                    tickFormat={[date(0, this.state.json), date(this.state.json.length-1, this.state.json)]}\n                ></VictoryAxis>\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={(x) => (`${x / 1000}k`)}\n                    label=\"Number of New Cases\"\n                    style={sharedAxisStyles}\n                ></VictoryAxis>\n\n                <VictoryBar\n                    data={configData(this.state.json)}\n                    x=\"index\"\n                    y=\"positive\"          \n                />\n            </VictoryChart>\n            \n            </div>\n            \n             </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}