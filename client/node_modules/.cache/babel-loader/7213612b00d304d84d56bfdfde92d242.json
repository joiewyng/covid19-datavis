{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/BubbleChartDb.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryScatter, createContainer } from 'victory';\nimport CountryChart from './CountryChart';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n\nfunction bubbleChartData(json, metric) {\n  let array = json;\n  console.log('json: ' + array); // let bubbleData = array.map(obj => ({\n  //     x: obj.TotalDeaths, \n  //     y: obj[metric], \n  //     amount: obj.TotalConfirmed, \n  //     country: obj.Country,\n  //     countryCode: obj.CountryCode\n  // }));\n\n  return bubbleData;\n}\n\nexport default class BubbleChartDb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      json: this.props.json,\n      countryCode: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      countryCode: event.target.value\n    });\n    console.log(event.target.value);\n    console.log(this.state.countryCode);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.covid19api.com/summary\";\n    const response = await fetch(url);\n    const data = await response.json(); // console.log(data);\n    // this.setState({loading: false, json: data});\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading || !this.state.json) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    if (this.state.countryCode !== '') {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setState({\n          countryCode: ''\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"Back to World Chart\"), /*#__PURE__*/React.createElement(CountryChart, {\n        countryCode: this.state.countryCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          paddingLeft: '15%',\n          marginTop: -50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(VictoryChart, {\n        style: {\n          parent: {\n            maxWidth: \"80%\"\n          }\n        },\n        height: 400,\n        width: 500,\n        padding: 100,\n        theme: VictoryTheme.material,\n        animate: {\n          duration: 10000\n        },\n        domain: {\n          x: [0, 130000],\n          y: [0, 70000]\n        },\n        containerComponent: /*#__PURE__*/React.createElement(VictoryZoomVoronoiContainer, {\n          zoomDomain: {\n            x: [0, 130000],\n            y: [0, 700500]\n          },\n          labels: ({\n            datum\n          }) => `${datum.country}: ${datum.amount} confirmed case(s)`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(VictoryLabel, {\n        fontSize: 10,\n        x: 250,\n        y: 60,\n        textAnchor: \"middle\",\n        text: \"World: Total Deaths vs Recoveries per Country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        style: sharedAxisStyles,\n        tickFormat: x => `${x / 1000}k`,\n        label: \"Total Recoveries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        dependentAxis: true,\n        tickFormat: x => `${x / 1000}k`,\n        label: \"Total Deaths\",\n        style: sharedAxisStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryScatter, {\n        style: {\n          data: {\n            fill: \"#c43a31\",\n            opacity: \"50%\"\n          }\n        },\n        bubbleProperty: \"amount\",\n        maxBubbleSize: 20,\n        minBubbleSize: 1,\n        data: bubbleChartData(this.state.json, 'TotalRecovered'),\n        events: [{\n          target: 'data',\n          eventHandlers: {\n            onClick: (event, data) => {\n              let cCode = data.datum.countryCode;\n              console.log(cCode);\n              this.setState({\n                countryCode: cCode\n              });\n            }\n          }\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/BubbleChartDb.js"],"names":["React","VictoryChart","VictoryAxis","VictoryTheme","VictoryLabel","VictoryScatter","createContainer","CountryChart","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","VictoryZoomVoronoiContainer","bubbleChartData","json","metric","array","console","log","bubbleData","BubbleChartDb","Component","constructor","props","state","loading","countryCode","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","componentDidMount","url","response","fetch","data","render","display","flexWrap","paddingLeft","marginTop","parent","maxWidth","material","duration","x","y","datum","country","amount","fill","opacity","eventHandlers","onClick","cCode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryTheme, \n     VictoryLabel,\n     VictoryScatter,\n     createContainer,\n    } from 'victory';\nimport CountryChart from './CountryChart'\n\nconst sharedAxisStyles = {\n    tickLabels: {\n        fontSize: 10\n    },\n    axisLabel: {\n        padding: 45,\n        fontSize: 10,\n        fontStyle: \"italic\"\n    }\n    };\n\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n    \nfunction bubbleChartData(json, metric) {\n    let array = json;\n    console.log('json: '+array);\n    // let bubbleData = array.map(obj => ({\n    //     x: obj.TotalDeaths, \n    //     y: obj[metric], \n    //     amount: obj.TotalConfirmed, \n    //     country: obj.Country,\n    //     countryCode: obj.CountryCode\n    // }));\n    return bubbleData;\n}\n\n\nexport default class BubbleChartDb extends React.Component {\n    state = {\n        loading: true,\n        json: this.props.json,\n        countryCode : ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n            this.setState({\n                countryCode: event.target.value\n            });\n            console.log(event.target.value);\n            console.log(this.state.countryCode);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async componentDidMount() {\n        const url = \"https://api.covid19api.com/summary\";\n        const response = await fetch(url);\n        const data = await response.json();\n        // console.log(data);\n        // this.setState({loading: false, json: data});\n        this.setState({loading: false});\n    }\n\n    render() {\n        if (this.state.loading || !this.state.json){\n            return(<div>loading...</div>);\n        }\n\n        if (this.state.countryCode !== ''){\n            return(\n                <>\n                <button onClick= {() => this.setState({countryCode: ''})}>Back to World Chart</button>\n                {/* <form style={{paddingLeft: '55%', marginBottom: '-10px'}} onSubmit={this.handleSubmit}>\n                <select value={this.state.countryCode} onChange={this.handleChange}>\n                    <option value={this.state.countryCode}>{this.state.countryCode}</option>\n                    <option value=\"fr\">France</option>\n                    <option value=\"br\">Brazil</option>\n                </select>\n                </form> */}\n                <CountryChart countryCode={this.state.countryCode}/>\n                </>\n            );\n        } else {\n            return (\n                <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: '15%', marginTop: -50 }}>\n                    <VictoryChart\n                        style={{ parent: { maxWidth: \"80%\" } }}\n                        height={400}\n                        width={500}\n                        padding={100}\n                        theme={\n                            VictoryTheme.material\n                        }\n                        animate={{\n                            duration: 10000\n                        }}\n                        domain={{x: [0, 130000], y: [0, 70000]}}\n                        containerComponent={\n                            <VictoryZoomVoronoiContainer \n                                zoomDomain={{x: [0, 130000], y: [0, 700500]}}\n                                labels={({ datum }) => `${datum.country}: ${datum.amount} confirmed case(s)`}\n                            />\n                        }\n                    >   \n                        <VictoryLabel\n                            fontSize={10}\n                            x={250}\n                            y={60}\n                            textAnchor=\"middle\"\n                            text=\"World: Total Deaths vs Recoveries per Country\"\n                        />\n                        <VictoryAxis\n                            style={sharedAxisStyles}\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Recoveries\"\n                        ></VictoryAxis>\n                        <VictoryAxis\n                            dependentAxis\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Deaths\"\n                            style={sharedAxisStyles}\n                        ></VictoryAxis>\n                        <VictoryScatter\n                            style={{ data: { fill: \"#c43a31\", opacity: \"50%\" } }}\n                            bubbleProperty=\"amount\"\n                            maxBubbleSize={20}\n                            minBubbleSize={1}\n                            data={bubbleChartData(this.state.json, 'TotalRecovered')}\n                            events={[{\n                                target: 'data',\n                                eventHandlers: {\n                                    onClick: (event, data) => {\n                                        let cCode = data.datum.countryCode\n                                        console.log(cCode);\n                                        this.setState({countryCode: cCode});\n                                    },\n                                },\n                            }]}\n                        >\n                        </VictoryScatter>\n                    </VictoryChart>\n                </div>\n            ); \n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}