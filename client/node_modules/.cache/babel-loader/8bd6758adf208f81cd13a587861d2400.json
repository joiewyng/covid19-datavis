{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/BubbleChartDb.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryScatter, createContainer } from 'victory';\nimport CountryChart from './CountryChart';\n\n/*#__PURE__*/\nReact.createElement(\"div\", {\n  style: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingLeft: '15%',\n    marginTop: -50\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(VictoryChart, {\n  style: {\n    parent: {\n      maxWidth: \"80%\"\n    }\n  },\n  height: 400,\n  width: 500,\n  padding: 100,\n  theme: VictoryTheme.material,\n  animate: {\n    duration: 10000\n  },\n  domain: {\n    x: [0, 130000],\n    y: [0, 70000]\n  },\n  containerComponent: /*#__PURE__*/React.createElement(VictoryZoomVoronoiContainer, {\n    zoomDomain: {\n      x: [0, 130000],\n      y: [0, 700500]\n    },\n    labels: ({\n      datum\n    }) => `${datum.country}: ${datum.amount} confirmed case(s)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(VictoryLabel, {\n  fontSize: 10,\n  x: 250,\n  y: 60,\n  textAnchor: \"middle\",\n  text: \"World: Total Deaths vs Recoveries per Country\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }\n}), /*#__PURE__*/React.createElement(VictoryAxis, {\n  style: sharedAxisStyles,\n  tickFormat: x => `${x / 1000}k`,\n  label: \"Total Recoveries\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }\n}), /*#__PURE__*/React.createElement(VictoryAxis, {\n  dependentAxis: true,\n  tickFormat: x => `${x / 1000}k`,\n  label: \"Total Deaths\",\n  style: sharedAxisStyles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }\n}), /*#__PURE__*/React.createElement(VictoryScatter, {\n  style: {\n    data: {\n      fill: \"#c43a31\",\n      opacity: \"50%\"\n    }\n  },\n  bubbleProperty: \"amount\",\n  maxBubbleSize: 20,\n  minBubbleSize: 1,\n  data: bubbleChartData(this.state.json, 'TotalRecovered'),\n  events: [{\n    target: 'data',\n    eventHandlers: {\n      onClick: (event, data) => {\n        let cCode = data.datum.countryCode;\n        console.log(cCode);\n        this.setState({\n          countryCode: cCode\n        });\n      }\n    }\n  }],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }\n})));\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n\nfunction bubbleChartData(json, metric) {\n  // console.log('json: '+JSON.stringify(json));\n  let array = [json];\n  let bubbleData = array.map(obj => ({\n    x: obj.TotalDeaths,\n    y: obj[metric],\n    amount: obj.TotalConfirmed,\n    country: obj.Country,\n    countryCode: obj.CountryCode\n  }));\n  return bubbleData;\n}\n\nexport default class BubbleChartDb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      json: {},\n      countryCode: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      countryCode: event.target.value\n    });\n    console.log(event.target.value);\n    console.log(this.state.countryCode);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.covid19api.com/summary\";\n    const response = await fetch(url);\n    const data = await response.json(); // console.log(data);\n    // this.setState({loading: false, json: data});\n\n    this.setState({\n      loading: false\n    });\n    console.log('aiya' + JSON.stringify(this.props.json));\n  }\n\n  render() {\n    if (this.state.loading || !this.state.json) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    if (this.state.countryCode !== '') {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setState({\n          countryCode: ''\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"Back to World Chart\"), /*#__PURE__*/React.createElement(CountryChart, {\n        countryCode: this.state.countryCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Temp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ManageData, {\n        setJson: this.handleJson,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          paddingLeft: '15%',\n          marginTop: -50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(VictoryChart, {\n        style: {\n          parent: {\n            maxWidth: \"80%\"\n          }\n        },\n        height: 400,\n        width: 500,\n        padding: 100,\n        theme: VictoryTheme.material,\n        animate: {\n          duration: 10000\n        },\n        domain: {\n          x: [0, 130000],\n          y: [0, 70000]\n        },\n        containerComponent: /*#__PURE__*/React.createElement(VictoryZoomVoronoiContainer, {\n          zoomDomain: {\n            x: [0, 130000],\n            y: [0, 700500]\n          },\n          labels: ({\n            datum\n          }) => `${datum.country}: ${datum.amount} confirmed case(s)`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(VictoryLabel, {\n        fontSize: 10,\n        x: 250,\n        y: 60,\n        textAnchor: \"middle\",\n        text: \"World: Total Deaths vs Recoveries per Country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        style: sharedAxisStyles,\n        tickFormat: x => `${x / 1000}k`,\n        label: \"Total Recoveries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        dependentAxis: true,\n        tickFormat: x => `${x / 1000}k`,\n        label: \"Total Deaths\",\n        style: sharedAxisStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryScatter, {\n        style: {\n          data: {\n            fill: \"#c43a31\",\n            opacity: \"50%\"\n          }\n        },\n        bubbleProperty: \"amount\",\n        maxBubbleSize: 20,\n        minBubbleSize: 1,\n        data: bubbleChartData(this.state.json, 'TotalRecovered'),\n        events: [{\n          target: 'data',\n          eventHandlers: {\n            onClick: (event, data) => {\n              let cCode = data.datum.countryCode;\n              console.log(cCode);\n              this.setState({\n                countryCode: cCode\n              });\n            }\n          }\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/BubbleChartDb.js"],"names":["React","VictoryChart","VictoryAxis","VictoryTheme","VictoryLabel","VictoryScatter","createContainer","CountryChart","display","flexWrap","paddingLeft","marginTop","parent","maxWidth","material","duration","x","y","datum","country","amount","sharedAxisStyles","data","fill","opacity","bubbleChartData","state","json","target","eventHandlers","onClick","event","cCode","countryCode","console","log","setState","tickLabels","fontSize","axisLabel","padding","fontStyle","VictoryZoomVoronoiContainer","metric","array","bubbleData","map","obj","TotalDeaths","TotalConfirmed","Country","CountryCode","BubbleChartDb","Component","constructor","props","loading","handleChange","bind","handleSubmit","value","preventDefault","componentDidMount","url","response","fetch","JSON","stringify","render","handleJson"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryTheme, \n     VictoryLabel,\n     VictoryScatter,\n     createContainer,\n    } from 'victory';\nimport CountryChart from './CountryChart'\n<div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: '15%', marginTop: -50 }}>\n                    <VictoryChart\n                        style={{ parent: { maxWidth: \"80%\" } }}\n                        height={400}\n                        width={500}\n                        padding={100}\n                        theme={\n                            VictoryTheme.material\n                        }\n                        animate={{\n                            duration: 10000\n                        }}\n                        domain={{x: [0, 130000], y: [0, 70000]}}\n                        containerComponent={\n                            <VictoryZoomVoronoiContainer \n                                zoomDomain={{x: [0, 130000], y: [0, 700500]}}\n                                labels={({ datum }) => `${datum.country}: ${datum.amount} confirmed case(s)`}\n                            />\n                        }\n                    >   \n                        <VictoryLabel\n                            fontSize={10}\n                            x={250}\n                            y={60}\n                            textAnchor=\"middle\"\n                            text=\"World: Total Deaths vs Recoveries per Country\"\n                        />\n                        <VictoryAxis\n                            style={sharedAxisStyles}\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Recoveries\"\n                        ></VictoryAxis>\n                        <VictoryAxis\n                            dependentAxis\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Deaths\"\n                            style={sharedAxisStyles}\n                        ></VictoryAxis>\n                        <VictoryScatter\n                            style={{ data: { fill: \"#c43a31\", opacity: \"50%\" } }}\n                            bubbleProperty=\"amount\"\n                            maxBubbleSize={20}\n                            minBubbleSize={1}\n                            data={bubbleChartData(this.state.json, 'TotalRecovered')}\n                            events={[{\n                                target: 'data',\n                                eventHandlers: {\n                                    onClick: (event, data) => {\n                                        let cCode = data.datum.countryCode\n                                        console.log(cCode);\n                                        this.setState({countryCode: cCode});\n                                    },\n                                },\n                            }]}\n                        >\n                        </VictoryScatter>\n                    </VictoryChart>\n                </div>\n\nconst sharedAxisStyles = {\n    tickLabels: {\n        fontSize: 10\n    },\n    axisLabel: {\n        padding: 45,\n        fontSize: 10,\n        fontStyle: \"italic\"\n    }\n    };\n\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n    \nfunction bubbleChartData(json, metric) {\n    \n    // console.log('json: '+JSON.stringify(json));\n    let array = [json];\n    let bubbleData = array.map(obj => ({\n        x: obj.TotalDeaths, \n        y: obj[metric], \n        amount: obj.TotalConfirmed, \n        country: obj.Country,\n        countryCode: obj.CountryCode\n    }));\n    return bubbleData;\n}\n\n\nexport default class BubbleChartDb extends React.Component {\n    state = {\n        loading: true,\n        json: {},\n        countryCode : ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n            this.setState({\n                countryCode: event.target.value\n            });\n            console.log(event.target.value);\n            console.log(this.state.countryCode);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async componentDidMount() {\n        const url = \"https://api.covid19api.com/summary\";\n        const response = await fetch(url);\n        const data = await response.json();\n        // console.log(data);\n        // this.setState({loading: false, json: data});\n        this.setState({loading: false});\n        console.log('aiya' + JSON.stringify(this.props.json));\n    }\n\n    render() {\n        if (this.state.loading || !this.state.json){\n            return(<div>loading...</div>);\n        }\n\n        if (this.state.countryCode !== ''){\n            return(\n                <>\n                <button onClick= {() => this.setState({countryCode: ''})}>Back to World Chart</button>\n                {/* <form style={{paddingLeft: '55%', marginBottom: '-10px'}} onSubmit={this.handleSubmit}>\n                <select value={this.state.countryCode} onChange={this.handleChange}>\n                    <option value={this.state.countryCode}>{this.state.countryCode}</option>\n                    <option value=\"fr\">France</option>\n                    <option value=\"br\">Brazil</option>\n                </select>\n                </form> */}\n                <CountryChart countryCode={this.state.countryCode}/>\n                </>\n            );\n        } else {\n            return (\n                <div>\n                    <Temp/>\n                    <ManageData setJson={this.handleJson}/>\n                    <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: '15%', marginTop: -50 }}>\n                    <VictoryChart\n                        style={{ parent: { maxWidth: \"80%\" } }}\n                        height={400}\n                        width={500}\n                        padding={100}\n                        theme={\n                            VictoryTheme.material\n                        }\n                        animate={{\n                            duration: 10000\n                        }}\n                        domain={{x: [0, 130000], y: [0, 70000]}}\n                        containerComponent={\n                            <VictoryZoomVoronoiContainer \n                                zoomDomain={{x: [0, 130000], y: [0, 700500]}}\n                                labels={({ datum }) => `${datum.country}: ${datum.amount} confirmed case(s)`}\n                            />\n                        }\n                    >   \n                        <VictoryLabel\n                            fontSize={10}\n                            x={250}\n                            y={60}\n                            textAnchor=\"middle\"\n                            text=\"World: Total Deaths vs Recoveries per Country\"\n                        />\n                        <VictoryAxis\n                            style={sharedAxisStyles}\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Recoveries\"\n                        ></VictoryAxis>\n                        <VictoryAxis\n                            dependentAxis\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Deaths\"\n                            style={sharedAxisStyles}\n                        ></VictoryAxis>\n                        <VictoryScatter\n                            style={{ data: { fill: \"#c43a31\", opacity: \"50%\" } }}\n                            bubbleProperty=\"amount\"\n                            maxBubbleSize={20}\n                            minBubbleSize={1}\n                            data={bubbleChartData(this.state.json, 'TotalRecovered')}\n                            events={[{\n                                target: 'data',\n                                eventHandlers: {\n                                    onClick: (event, data) => {\n                                        let cCode = data.datum.countryCode\n                                        console.log(cCode);\n                                        this.setState({countryCode: cCode});\n                                    },\n                                },\n                            }]}\n                        >\n                        </VictoryScatter>\n                    </VictoryChart>\n                </div>\n                </div>\n                \n            ); \n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}