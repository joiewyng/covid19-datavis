{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/covid19-datavis/client/src/components/DataTwo.js\";\nimport React from 'react';\nimport { VictoryPie, VictoryBar, VictoryChart, VictoryPolarAxis, VictoryStack, VictoryTheme, VictoryGroup, VictoryLabel, VictoryTooltip, VictoryLegend } from 'victory';\nexport default class DataTwo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      json: {}\n    };\n  }\n\n  async callDB() {\n    await fetch(\"http://localhost:9000/worldDB\").then(res => {\n      return res.json();\n    }).then(json => {\n      this.setState({\n        json: Array.from(json)\n      });\n    }).catch(err => err);\n  }\n\n  async componentDidMount() {\n    await this.callDB();\n    this.setState({\n      loading: false\n    });\n    console.log(this.state.json);\n    console.log(this.state.json[0][\"Annual Totals\"][9].Period);\n  }\n\n  render() {\n    if (this.state.loading || this.state.json.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Data2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          marginTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Energy in the USA\"), /*#__PURE__*/React.createElement(DonutChart, {\n        data: this.state.json[0][\"Annual Totals\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(HorizBarChart, {\n        data: this.state.json[1][\"Year 2018\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PieChart, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\nlet sampleDataPolar = [{\n  x: 100,\n  y: 3\n}];\nlet sampleDataPolar2 = [{\n  x: 300,\n  y: 10\n}, {\n  x: 300,\n  y: 5\n}];\nlet sampleDataPolar3 = [{\n  x: 10,\n  y: 4\n}];\n\nclass CustomLabel extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryTooltip, Object.assign({}, this.props, {\n      x: 200,\n      y: 275,\n      orientation: \"top\",\n      pointerLength: 0,\n      cornerRadius: 75,\n      flyoutWidth: 150,\n      flyoutHeight: 170,\n      flyoutStyle: {\n        fill: \"white\",\n        stroke: \"none\"\n      },\n      style: {\n        labels: {\n          fill: \"black\",\n          fontSize: 15\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nCustomLabel.defaultEvents = VictoryTooltip.defaultEvents;\n\nclass DonutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: 9,\n      sum: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  calculateSum() {\n    let obj = this.props.data[this.state.year];\n    let array = Object.entries(obj);\n    let dataArray = array.filter((_, i) => ![0, 10, 11, 12].includes(i));\n    let sum = 0;\n\n    for (let i = 0; i < dataArray.length; i++) {\n      let value = dataArray[i][1];\n      let parsedVal = parseFloat(value.replace(/,/g, ''));\n      sum += parsedVal;\n    }\n\n    this.setState({\n      sum: sum\n    });\n  }\n\n  configData() {\n    let obj = this.props.data[this.state.year];\n    let array = Object.entries(obj);\n    console.log(array); // tuple array with each entry containing the key and value\n\n    let dataArray = array.filter((_, i) => ![0, 10, 11, 12].includes(i));\n    console.log(dataArray);\n    let pieData = [];\n\n    if (this.state.sum !== 0) {\n      pieData = dataArray.map(obj => ({\n        x: obj[0],\n        y: parseFloat(obj[1].replace(/,/g, '')),\n        percent: (parseFloat(obj[1].replace(/,/g, '')) / this.state.sum * 100).toFixed(2)\n      }));\n    }\n\n    return pieData;\n  }\n\n  handleChange(event) {\n    this.setState({\n      year: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.calculateSum();\n    this.configData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: -20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        lineHeight: 3,\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Net Generation from Renewable Sources\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"MWh = Megawatthours\"), /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        margin: 15,\n        padding: 5\n      },\n      value: this.state.year,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"2010\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"2011\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"2012\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"2013\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"2014\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"2015\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"2016\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, \"2017\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"2018\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"2019\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryPie, {\n      animate: {\n        duration: 1000\n      },\n      colorScale: [\"#8DC3A7\", \"#6BAF92\", \"#4E9C81\", \"#358873\", \"#207567\"],\n      outerRadius: 250,\n      innerRadius: 100,\n      labelRadius: 160,\n      labels: ({\n        datum\n      }) => `${datum.percent}% \\n -------------- \\n${datum.x} \\n -------------- \\n${datum.y}K MWh `,\n      style: {\n        labels: {\n          fill: \"black\",\n          fontSize: 10\n        }\n      },\n      labelComponent: /*#__PURE__*/React.createElement(CustomLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }\n      }),\n      data: this.configData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: -290,\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"201\", this.state.year), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 290\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\nconst energyType = [\"wind\", \"solarPhotovoltaic\", \"woodFuels\", \"hydroelectric\"];\n\nclass HorizBarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wind: [],\n      solarPhotovoltaic: [],\n      woodFuels: [],\n      hydroelectric: [],\n      loading: true\n    };\n  }\n\n  configBarData() {\n    let wind = [];\n    let solar = [];\n    let wood = [];\n    let hydro = [];\n\n    for (let i = 0; i < this.props.data.length; i++) {\n      wind.push(parseFloat(this.props.data[i][\"Wind\"].replace(/,/g, '')));\n      solar.push(parseFloat(this.props.data[i][\"Solar Photovoltaic\"].replace(/,/g, '')));\n      wood.push(parseFloat(this.props.data[i][\"Wood and Wood-Derived Fuels\"].replace(/,/g, '')));\n      hydro.push(parseFloat(this.props.data[i][\"Conventional Hydroelectric\"].replace(/,/g, '')));\n    }\n\n    this.setState({\n      wind: wind,\n      solarPhotovoltaic: solar,\n      woodFuels: wood,\n      hydroelectric: hydro\n    });\n  }\n\n  configCategoryData(category) {\n    let data = [];\n\n    for (let i = 0; i < 12; i++) {\n      data.push({\n        x: months[i],\n        y: this.state[category][i]\n      });\n    }\n\n    console.log(data);\n    return data;\n  }\n\n  componentDidMount() {\n    this.configBarData();\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading || this.state.wind.length === 0 || this.state.solarPhotovoltaic.length === 0 || this.state.woodFuels.length === 0 || this.state.hydroelectric.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        lineHeight: 3,\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, \"Net Generation from Top Four Renewable Sources in 2018\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"in Thousand Megawatthours\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryChart // theme={VictoryTheme.material}\n    , {\n      domainPadding: {\n        y: 12,\n        x: 12\n      },\n      domain: {\n        y: [0.5, 100000]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(VictoryLegend, {\n      x: 300,\n      y: 50,\n      title: \"Energy Sources\",\n      centerTitle: true,\n      orientation: \"vertical\",\n      gutter: 15,\n      style: {\n        border: {\n          stroke: \"black\"\n        },\n        title: {\n          fontSize: 10\n        }\n      },\n      data: [{\n        name: \"Wind\",\n        symbol: {\n          fill: \"brown\"\n        }\n      }, {\n        name: \"Hydroelectric\",\n        symbol: {\n          fill: \"gold\"\n        }\n      }, {\n        name: \"Solar\",\n        symbol: {\n          fill: \"tomato\"\n        }\n      }, {\n        name: \"Wood Fuels\",\n        symbol: {\n          fill: \"orange\"\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(VictoryGroup, {\n      horizontal: true,\n      offset: 10,\n      style: {\n        data: {\n          width: 13\n        }\n      },\n      colorScale: [\"brown\", \"gold\", \"orange\", \"tomato\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VictoryStack, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VictoryBar, {\n      data: this.configCategoryData(\"wind\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: this.configCategoryData(\"hydroelectric\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: this.configCategoryData(\"solarPhotovoltaic\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: this.configCategoryData(\"woodFuels\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }))))));\n  }\n\n}\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"30%\",\n        marginRight: \"30%\",\n        marginTop: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryPie // style={{ parent: { minWidth: \"50%\" }}}\n    , {\n      colorScale: [\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\", \"white\"],\n      data: [{\n        x: \"Cats\",\n        y: 35\n      }, {\n        x: \"Dogs\",\n        y: 40\n      }, {\n        x: \"Birds\",\n        y: 55\n      }, {\n        x: \"Frogs\",\n        y: 55\n      }, {\n        x: \"Mice\",\n        y: 55\n      }, {\n        x: \"Snakes\",\n        y: 10\n      }] // data={this.configData()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryBar, {\n      polar: true,\n      data: [{\n        x: 100,\n        y: 3\n      }, {\n        x: 6,\n        y: 5\n      }, {\n        x: 50,\n        y: 2\n      }],\n      width: 400,\n      height: 400,\n      domain: {\n        x: [0, 360],\n        y: [0, 5]\n      },\n      style: {\n        data: {\n          fill: \"#c43a31\",\n          stroke: \"black\",\n          strokeWidth: 2\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryChart, {\n      polar: true,\n      maxDomain: {\n        x: 360\n      },\n      height: 250,\n      width: 250,\n      padding: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(VictoryPolarAxis, {\n      dependentAxis: true,\n      style: {\n        axis: {\n          stroke: \"none\"\n        },\n        tickLabels: {\n          fill: \"none\"\n        },\n        grid: {\n          stroke: \"grey\",\n          strokeDasharray: \"4, 8\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryPolarAxis, {\n      tickValues: [0, 45, 90, 135, 180, 225, 270, 315],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryStack, {\n      colorScale: [\"#ad1b11\", \"#c43a31\", \"#dc7a6b\", \"pink\", \"green\", \"blue\"],\n      style: {\n        data: {\n          width: 50\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(VictoryBar, {\n      data: sampleDataPolar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: sampleDataPolar2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: sampleDataPolar3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/covid19-datavis/client/src/components/DataTwo.js"],"names":["React","VictoryPie","VictoryBar","VictoryChart","VictoryPolarAxis","VictoryStack","VictoryTheme","VictoryGroup","VictoryLabel","VictoryTooltip","VictoryLegend","DataTwo","Component","constructor","props","state","loading","json","callDB","fetch","then","res","setState","Array","from","catch","err","componentDidMount","console","log","Period","render","length","marginTop","sampleDataPolar","x","y","sampleDataPolar2","sampleDataPolar3","CustomLabel","fill","stroke","labels","fontSize","defaultEvents","DonutChart","year","sum","handleChange","bind","calculateSum","obj","data","array","Object","entries","dataArray","filter","_","i","includes","value","parsedVal","parseFloat","replace","configData","pieData","map","percent","toFixed","event","target","marginBottom","lineHeight","margin","padding","marginLeft","marginRight","duration","datum","months","energyType","HorizBarChart","wind","solarPhotovoltaic","woodFuels","hydroelectric","configBarData","solar","wood","hydro","push","configCategoryData","category","border","title","name","symbol","width","PieChart","strokeWidth","axis","tickLabels","grid","strokeDasharray"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    VictoryPie,\n    VictoryBar,\n    VictoryChart,\n    VictoryPolarAxis,\n    VictoryStack,\n    VictoryTheme,\n    VictoryGroup,\n    VictoryLabel,\n    VictoryTooltip,\n    VictoryLegend\n   } from 'victory';\nexport default class DataTwo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            json: {},\n        }\n    }\n    async callDB() {\n        await fetch(\"http://localhost:9000/worldDB\")\n            .then(res => {\n                return res.json();\n            }).then(json => {\n                this.setState({json: Array.from(json)});\n            }).catch(err => err);\n    }\n\n    async componentDidMount() {\n        await this.callDB();\n        this.setState({loading: false});\n        console.log(this.state.json);\n        console.log(this.state.json[0][\"Annual Totals\"][9].Period);\n    }\n\n    render(){\n        if (this.state.loading || this.state.json.length === 0){\n            return(<div>loading...</div>);\n        } else {\n            return (\n                <div className=\"Data2\">\n                    <h1 style={{marginTop: 50}}>Energy in the USA</h1>\n                    <DonutChart data={this.state.json[0][\"Annual Totals\"]}/>\n                    <HorizBarChart data={this.state.json[1][\"Year 2018\"]}/>\n                    <PieChart/>\n                </div>\n            );\n        }\n    }\n}\n\nlet sampleDataPolar = [\n    { x: 100, y: 3},\n];\n\nlet sampleDataPolar2 = [\n    { x: 300, y: 10},\n    { x: 300, y: 5},\n];\n\nlet sampleDataPolar3 = [\n    { x: 10, y: 4},\n];\n\n\n\nclass CustomLabel extends React.Component {\n    render() {\n        return (\n        <g>\n            {/* <VictoryLabel {...this.props}/> */}\n            <VictoryTooltip\n            {...this.props}\n            x={200} y={275}\n            orientation=\"top\"\n            pointerLength={0}\n            cornerRadius={75}\n            flyoutWidth={150}\n            flyoutHeight={170}\n            flyoutStyle={{ fill: \"white\", stroke:\"none\"}}\n            style={{ labels: { fill: \"black\", fontSize:15} }}\n            />\n        </g>\n        );\n    }\n}\n\nCustomLabel.defaultEvents = VictoryTooltip.defaultEvents;\n\nclass DonutChart extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            year: 9,\n            sum: 0\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    calculateSum() {\n        let obj = this.props.data[this.state.year];\n        let array = Object.entries(obj);\n        let dataArray = array.filter((_, i) => ![0, 10, 11, 12].includes(i));\n        let sum = 0;\n        for (let i = 0; i < dataArray.length; i++){\n            let value = dataArray[i][1];\n            let parsedVal = parseFloat(value.replace(/,/g, ''));\n            sum += parsedVal;\n        }\n        this.setState({sum: sum});\n    }\n\n    configData () {\n        let obj = this.props.data[this.state.year];\n        let array = Object.entries(obj);\n        console.log(array);\n        // tuple array with each entry containing the key and value\n        let dataArray = array.filter((_, i) => ![0, 10, 11, 12].includes(i));\n        console.log(dataArray);\n        let pieData = [];\n        if (this.state.sum !== 0){\n            pieData = dataArray.map(obj => \n                ({\n                    x: obj[0],\n                    y: parseFloat(obj[1].replace(/,/g, '')),\n                    percent: (parseFloat(obj[1].replace(/,/g, ''))/this.state.sum*100).toFixed(2),\n                }\n                ));\n        }\n        return pieData;\n    }\n\n    handleChange(event){\n        this.setState({year: event.target.value})\n    }\n\n    componentDidMount(){\n        this.calculateSum();\n        this.configData();\n    }\n\n    render() {\n        return (\n            <>\n            <div style={{marginBottom: -20}}>\n                <strong style={{lineHeight: 3, fontSize: 20}}>Net Generation from Renewable Sources</strong>\n                <div>MWh = Megawatthours</div>\n                <select style={{margin: 15, padding:5}}value={this.state.year} onChange={this.handleChange}>\n                    <option value=\"0\">2010</option>\n                    <option value=\"1\">2011</option>\n                    <option value=\"2\">2012</option>\n                    <option value=\"3\">2013</option>\n                    <option value=\"4\">2014</option>\n                    <option value=\"5\">2015</option>\n                    <option value=\"6\">2016</option>\n                    <option value=\"7\">2017</option>\n                    <option value=\"8\">2018</option>\n                    <option value=\"9\">2019</option>\n             </select>\n            </div>\n            \n            <div style={{marginLeft: \"30%\", marginRight: \"30%\"}}>\n                <VictoryPie\n                    animate={{\n                        duration: 1000\n                    }}\n                    colorScale={[\"#8DC3A7\", \"#6BAF92\", \"#4E9C81\", \"#358873\", \"#207567\" ]}\n                    outerRadius={250}\n                    innerRadius={100}\n                    labelRadius={160}\n                    labels={({ datum }) => `${datum.percent}% \\n -------------- \\n${datum.x} \\n -------------- \\n${datum.y}K MWh `}\n                    style={{ labels: { fill: \"black\", fontSize: 10} }}\n                    labelComponent={<CustomLabel />}\n                    data={this.configData()}\n                \n                />\n            </div>\n            <div  style={{marginTop: -290, fontSize: 30}}>201{this.state.year}</div>\n            <div style={{marginTop: 290}}></div>\n            </>\n        )\n    }\n}\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\nconst energyType = [\"wind\", \"solarPhotovoltaic\", \"woodFuels\", \"hydroelectric\"];\nclass HorizBarChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            wind: [],\n            solarPhotovoltaic: [],\n            woodFuels: [],\n            hydroelectric: [],\n            loading: true\n        }\n    }\n    configBarData(){\n        let wind = [];\n        let solar = [];\n        let wood = [];\n        let hydro = [];\n        for (let i = 0; i < this.props.data.length; i++){\n            wind.push(parseFloat(this.props.data[i][\"Wind\"].replace(/,/g, '')));\n            solar.push(parseFloat(this.props.data[i][\"Solar Photovoltaic\"].replace(/,/g, '')));\n            wood.push(parseFloat(this.props.data[i][\"Wood and Wood-Derived Fuels\"].replace(/,/g, '')));\n            hydro.push(parseFloat(this.props.data[i][\"Conventional Hydroelectric\"].replace(/,/g, '')));\n        }\n        this.setState({\n            wind: wind,\n            solarPhotovoltaic: solar,\n            woodFuels: wood,\n            hydroelectric: hydro\n        })\n    }\n\n    configCategoryData(category){\n        let data = [];\n        for (let i = 0; i < 12; i++){\n            data.push(\n                {\n                    x: months[i],\n                    y:this.state[category][i]\n                }\n            )\n        }\n        console.log(data);\n        return data;\n    }\n\n    componentDidMount(){\n        this.configBarData();\n        this.setState({loading: false});\n    }\n    render() {\n        if (this.state.loading \n            || this.state.wind.length === 0 \n            || this.state.solarPhotovoltaic.length === 0 \n            || this.state.woodFuels.length === 0\n            || this.state.hydroelectric.length === 0){\n            return(<div>loading...</div>);\n        }\n        return (\n            <>\n            <strong style={{lineHeight: 3, fontSize: 20}}>Net Generation from Top Four Renewable Sources in 2018</strong>\n            <div>in Thousand Megawatthours</div>\n            <div style={{marginLeft: \"30%\", marginRight: \"30%\"}}>\n                <VictoryChart\n                // theme={VictoryTheme.material}\n                domainPadding={{ y: 12, x: 12 }}\n                domain={{ y: [0.5, 100000] }}\n                >\n                      <VictoryLegend x={300} y={50}\n                        title=\"Energy Sources\"\n                        centerTitle\n                        orientation=\"vertical\"\n                        gutter={15}\n                        style={{ border: { stroke: \"black\" }, title: {fontSize: 10 } }}\n                        data={[\n                        { name: \"Wind\", symbol: { fill: \"brown\"} },\n                        { name: \"Hydroelectric\", symbol: { fill: \"gold\" } },\n                        { name: \"Solar\", symbol: { fill: \"tomato\" } },\n                        { name: \"Wood Fuels\", symbol: { fill: \"orange\" } },\n                        ]}\n                    />\n                    <VictoryGroup horizontal\n                    offset={10}\n                    style={{ data: { width: 13 } }}\n                    colorScale={[\"brown\", \"gold\", \"orange\", \"tomato\"]}\n                    >\n                    <VictoryStack>\n                        <VictoryBar\n                            data={this.configCategoryData(\"wind\")}\n                      \n                        />\n                        <VictoryBar\n                            data={this.configCategoryData(\"hydroelectric\")}\n                        />\n                        <VictoryBar\n                            data={this.configCategoryData(\"solarPhotovoltaic\")}\n                        />\n                        <VictoryBar\n                            data={this.configCategoryData(\"woodFuels\")}\n                        />\n                         \n                    </VictoryStack>\n                    \n                </VictoryGroup>\n                </VictoryChart>\n            </div>\n            </>\n        );\n    }\n}\n\nclass PieChart extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <>\n            <div style={{marginLeft: \"30%\", marginRight: \"30%\", marginTop: \"5%\"}}>\n                <VictoryPie\n                // style={{ parent: { minWidth: \"50%\" }}}\n                colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\", \"white\" ]}\n                data={[\n                    { x: \"Cats\", y: 35 },\n                    { x: \"Dogs\", y: 40 },\n                    { x: \"Birds\", y: 55 },\n                    { x: \"Frogs\", y: 55 },\n                    { x: \"Mice\", y: 55 },\n                    { x: \"Snakes\", y: 10 }\n                ]}\n                // data={this.configData()}\n                />\n            </div>\n            \n            \n            <div style={{marginLeft: \"30%\", marginRight: \"30%\"}}>\n            <VictoryBar polar\n                \n                data={[\n                    { x: 100, y: 3 },\n                    { x: 6, y: 5 },\n                    { x: 50, y: 2 },\n              \n                ]}\n                width={400} height={400}\n                domain={{ x: [0, 360], y: [0, 5] }}\n                style={{ data: { fill: \"#c43a31\", stroke: \"black\", strokeWidth: 2 } }}\n            />\n            </div>\n                \n            <div style={{marginLeft: \"30%\", marginRight: \"30%\"}}>\n                <VictoryChart polar\n                    maxDomain={{ x: 360 }}\n                    height={250} width={250}\n                    padding={30}\n                >\n                <VictoryPolarAxis dependentAxis\n                    style={{\n                    axis: {stroke: \"none\"},\n                    tickLabels: { fill: \"none\"},\n                    grid: { stroke: \"grey\", strokeDasharray: \"4, 8\" }\n                    }}\n                />\n                <VictoryPolarAxis\n                    tickValues={[0, 45, 90, 135, 180, 225, 270, 315]}\n                />\n                <VictoryStack\n                    colorScale={[\"#ad1b11\", \"#c43a31\", \"#dc7a6b\", \"pink\", \"green\", \"blue\"]}\n                    style={{ data: { width: 50} }}\n                >\n                    <VictoryBar data={sampleDataPolar}/>\n                    <VictoryBar data={sampleDataPolar2}/>\n                    <VictoryBar data={sampleDataPolar3}/>\n                </VictoryStack>\n                </VictoryChart>\n            </div>\n           \n            \n\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}