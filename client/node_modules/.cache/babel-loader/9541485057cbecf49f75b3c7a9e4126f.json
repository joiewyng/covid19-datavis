{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js\";\nimport React from 'react';\nimport Temp from './Temp';\nexport default class ManageData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.state = {\n      loading: true,\n      apiLink: '',\n      apiJson: '',\n      dbName: '',\n      deleteDb: false,\n      dataJson: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmit2 = this.handleSubmit2.bind(this);\n    this.handleDeleteSubmit = this.handleDeleteSubmit.bind(this);\n    this.handleCountrySubmit = this.handleCountrySubmit.bind(this);\n  }\n\n  // pull data from API at [url], set to json, update state apiJson\n  async apiToJson(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log('GET API data: success');\n    this.setState({\n      loading: false,\n      apiJson: data\n    });\n  }\n\n  async handleSubmit(event) {\n    // console.log('handleSubmit for: ' + this.state.dbName);\n    event.preventDefault();\n    let url = this.state.apiLink;\n    await this.apiToJson(url);\n    await fetch(\"http://localhost:9000/testDB\", {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName,\n        json: this.state.apiJson\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('(init) POST to NodeJS endpoint: success');\n      return response.json();\n    }).then(function (json) {\n      // json (queried from MongoDB) has all the data from the api just submitted\n      return json;\n    }).catch(function (err) {\n      console.log('Failed to send form data to Node: \\n' + err);\n    });\n    alert('Creating a database with the following submission: \\n\\nAPI link: ' + url + '\\nDB name: ' + this.state.dbName);\n  }\n\n  async handleDeleteSubmit(event) {\n    // console.log('handleDelete for: ' + this.state.dbName);\n    event.preventDefault();\n    await this.setState({\n      deleteDb: true\n    });\n    let url = \"http://localhost:9000/testDB?delete=\" + this.state.deleteDb;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('(del) POST to NodeJS endpoint: success');\n      return response.text();\n    }).then(string => {\n      console.log(\"response string:\");\n      console.log(string); // nothing: issue in testDB\n    }).catch(function (err) {\n      console.log('Failed to delete DB: \\n' + err);\n    });\n    alert('The following database will be deleted: ' + this.state.dbName);\n  }\n\n  async handleCountrySubmit(event) {\n    console.log('handleCountry for: ' + this.state.dbName);\n    event.preventDefault();\n    let url = \"http://localhost:9000/testDB?country=\" + this.state.country;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('(country) POST to NodeJS endpoint: success');\n      console.log(response);\n      return response;\n    }).catch(function (err) {\n      console.log('Failed retrieve country data: \\n' + err);\n    });\n    alert('Retrieving data from: ' + this.state.dbName + ' on ' + this.state.country);\n  }\n\n  handleSubmit2() {\n    this.setState({\n      json: this.handleSubmit()\n    });\n    console.log(this.state.json[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        margin: 30\n      },\n      onSubmit: this.handleSubmit2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"DB Name: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"dbName\",\n      value: this.state.dbName,\n      onChange: this.handleChange('dbName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"API Link: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"apiLink\",\n      value: this.state.apiLink,\n      onChange: this.handleChange('apiLink'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"initDB\",\n      value: \"Initialize Database\",\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDeleteSubmit,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"Delete Database\"), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"Country: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"apiLink\",\n      value: this.state.country,\n      onChange: this.handleChange('country'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleCountrySubmit,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Search\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js"],"names":["React","Temp","ManageData","Component","constructor","props","handleChange","prop","event","setState","target","value","state","loading","apiLink","apiJson","dbName","deleteDb","dataJson","bind","handleSubmit","handleSubmit2","handleDeleteSubmit","handleCountrySubmit","apiToJson","url","response","fetch","data","json","console","log","preventDefault","method","body","JSON","stringify","headers","then","catch","err","alert","text","string","country","render","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Temp from './Temp';\n\nexport default class ManageData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            apiLink: '',\n            apiJson: '',\n            dbName: '',\n            deleteDb: false,\n            dataJson: {},\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSubmit2 = this.handleSubmit2.bind(this);\n        this.handleDeleteSubmit = this.handleDeleteSubmit.bind(this);\n        this.handleCountrySubmit = this.handleCountrySubmit.bind(this);\n        \n    }\n\n\n\n    handleChange = prop => (event) => {\n        this.setState({[prop]: event.target.value});\n    }\n    \n    // pull data from API at [url], set to json, update state apiJson\n    async apiToJson (url) {\n \n        const response = await fetch(url);\n        const data = await response.json();\n        console.log('GET API data: success')\n        this.setState({loading: false, apiJson: data});\n    }\n\n    async handleSubmit(event) {\n        // console.log('handleSubmit for: ' + this.state.dbName);\n        event.preventDefault();\n        let url = this.state.apiLink;\n        await this.apiToJson(url);\n        await fetch(\"http://localhost:9000/testDB\", {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n                json: this.state.apiJson,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('(init) POST to NodeJS endpoint: success')\n            return response.json();\n          }).then(function(json){\n            // json (queried from MongoDB) has all the data from the api just submitted\n            return json;\n          }).catch(function(err){\n              console.log('Failed to send form data to Node: \\n'+err);\n          });\n          alert('Creating a database with the following submission: \\n\\nAPI link: ' + url+'\\nDB name: '+this.state.dbName);\n    }\n\n    async handleDeleteSubmit(event) {\n        // console.log('handleDelete for: ' + this.state.dbName);\n        event.preventDefault();\n        await this.setState({deleteDb: true});\n        let url = \"http://localhost:9000/testDB?delete=\" + this.state.deleteDb;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(function(response){\n            console.log('(del) POST to NodeJS endpoint: success')\n            return response.text();\n        }).then(string => {\n            console.log(\"response string:\");\n            console.log(string); // nothing: issue in testDB\n        }).catch(function(err){\n              console.log('Failed to delete DB: \\n'+err);\n          });\n          alert('The following database will be deleted: '+this.state.dbName);\n        \n    }\n\n    async handleCountrySubmit(event) {\n        console.log('handleCountry for: ' + this.state.dbName);\n        event.preventDefault();\n        let url = \"http://localhost:9000/testDB?country=\" + this.state.country;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('(country) POST to NodeJS endpoint: success')\n\n            console.log(response);\n            return response;\n          }).catch(function(err){\n              console.log('Failed retrieve country data: \\n'+err);\n          });\n          alert('Retrieving data from: '+this.state.dbName+' on '+this.state.country);\n    }\n\n    handleSubmit2(){\n        this.setState({\n            json: this.handleSubmit(),\n        })\n        console.log(this.state.json[0]);\n    }\n\n    render(){\n        return (\n            <div>\n                <form style={{margin: 30}} onSubmit={this.handleSubmit2}>\n                    <label style={{margin: 15}}>\n                        DB Name: &nbsp;\n                        <input type=\"text\" name=\"dbName\" value={this.state.dbName} onChange={this.handleChange('dbName')}/>\n                    </label>\n                    <label style={{margin: 15}}>\n                        API Link: &nbsp;\n                        <input type=\"text\" name=\"apiLink\" value={this.state.apiLink} onChange={this.handleChange('apiLink')}/>\n                    </label>\n                    <input type=\"submit\" name=\"initDB\" value=\"Initialize Database\" style={{margin: 15}}/>\n                    <button onClick={this.handleDeleteSubmit} style={{margin: 15}}>Delete Database</button>\n                    <label style={{margin: 15}}>\n                        Country: &nbsp;\n                        <input type=\"text\" name=\"apiLink\" value={this.state.country} onChange={this.handleChange('country')}/>\n                    </label>\n                    <button onClick={this.handleCountrySubmit} style={{margin: 15}}>Search</button>\n                </form>\n            </div> \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}