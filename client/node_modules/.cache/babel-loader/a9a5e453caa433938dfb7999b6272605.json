{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js\";\nimport React from 'react';\nimport * as V from 'victory';\nlet allData = {\n  data: {},\n  length: 0\n};\n\nfunction configData(json) {\n  console.log(json);\n  const data = [];\n\n  for (let i = json.length - 1; i >= 0; i--) {\n    data.push({\n      index: i,\n      positive: json[json.length - 1 - i].positive,\n      date: json[json.length - 1 - i].date\n    });\n  }\n\n  console.log(data);\n  return data;\n}\n\nfunction date(index, json) {\n  let date = json[index].date;\n  date = date.substr(6) + \"/\" + date.substr(4, 6) + \"/\" + date.substr(0, 4);\n  return date;\n}\n\nexport default class FetchData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      json: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://covidtracking.com/api/us/daily\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      json: data\n    });\n    console.log(this.state.json[0]);\n    console.log(typeof this.state.json); // allData.data = configData(data);\n    // allData.length = allData.data.length;\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(V.VictoryChart, {\n      // domainPadding={50}\n      padding: 100,\n      theme: V.VictoryTheme.material,\n      animate: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(V.VictoryAxis, {\n      // tickValues={[0, allData.length]}\n      // tickFormat={[0, allData.length]}\n      tickValues: [0, this.state.json.length],\n      tickFormat: [date(0, this.state.json), date(this.state.json.length - 1, this.state.json)] // tickValues={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n      // tickFormat={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(V.VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `${x / 1000}k`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(V.VictoryBar, {\n      // data={this.state.json}\n      // x=\"date\"\n      // y=\"positive\"\n      data: configData(this.state.json),\n      x: \"index\",\n      y: \"positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    })) // <div>\n    //     {this.state.loading ? <div>loading...</div> : <div>{this.state.json[0].death} deaths</div>}\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js"],"names":["React","V","allData","data","length","configData","json","console","log","i","push","index","positive","date","substr","FetchData","Component","state","loading","componentDidMount","url","response","fetch","setState","render","VictoryTheme","material","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as V from 'victory';\n\nlet allData = {data: {}, length: 0}\n\nfunction configData(json) {\n    console.log(json);\n    const data = [];\n    for (let i = json.length-1; i >= 0; i--){\n        data.push({index: i, positive: json[json.length-1-i].positive, date: json[json.length-1-i].date});\n    }\n    console.log(data);\n    return data;\n}\n\nfunction date(index, json){\n    let date = json[index].date;\n    date = date.substr(6) + \"/\" + date.substr(4,6) + \"/\" + date.substr(0,4);\n    return date;\n}\nexport default class FetchData extends React.Component {\n    state = {\n        loading: true,\n        json: {}\n    };\n\n    async componentDidMount() {\n        const url = \"https://covidtracking.com/api/us/daily\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({loading: false, json: data});\n        console.log(this.state.json[0]);\n        console.log(typeof(this.state.json));\n        // allData.data = configData(data);\n        // allData.length = allData.data.length;\n    }\n\n    \n\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        return (\n           \n            <V.VictoryChart\n            // domainPadding={50}\n            padding={100}\n            theme={V.VictoryTheme.material}\n            animate={{}}\n            >\n                <V.VictoryAxis\n                    // tickValues={[0, allData.length]}\n                    // tickFormat={[0, allData.length]}\n                    tickValues={[0, this.state.json.length]}\n                    tickFormat={[date(0, this.state.json), date(this.state.json.length-1, this.state.json)]}\n                    // tickValues={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n                    // tickFormat={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n                ></V.VictoryAxis>\n                <V.VictoryAxis\n                    dependentAxis\n                    tickFormat={(x) => (`${x / 1000}k`)}\n                ></V.VictoryAxis>\n                <V.VictoryBar\n                    // data={this.state.json}\n                    // x=\"date\"\n                    // y=\"positive\"\n                   \n                    data={configData(this.state.json)}\n                    x=\"index\"\n                    y=\"positive\" \n                    \n                />\n            </V.VictoryChart>\n            \n            // <div>\n            //     {this.state.loading ? <div>loading...</div> : <div>{this.state.json[0].death} deaths</div>}\n            // </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}