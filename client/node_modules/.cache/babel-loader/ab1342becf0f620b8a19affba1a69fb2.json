{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/data-vis/src/components/Test.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { VictoryChart, VictoryAxis, VictoryStack, VictoryBar, VictoryTheme } from 'victory';\nconst data2012 = [{\n  quarter: 1,\n  earnings: 13000,\n  i: 100\n}, {\n  quarter: 2,\n  earnings: 16500,\n  i: 200\n}, {\n  quarter: 3,\n  earnings: 14250,\n  i: 300\n}, {\n  quarter: 4,\n  earnings: 19000,\n  i: 400\n}];\nconst data2013 = [{\n  quarter: 1,\n  earnings: 15000\n}, {\n  quarter: 2,\n  earnings: 12500\n}, {\n  quarter: 3,\n  earnings: 19500\n}, {\n  quarter: 4,\n  earnings: 13000\n}];\nconst data2014 = [{\n  quarter: 1,\n  earnings: 11500\n}, {\n  quarter: 2,\n  earnings: 13250\n}, {\n  quarter: 3,\n  earnings: 20000\n}, {\n  quarter: 4,\n  earnings: 15500\n}];\nconst data2015 = [{\n  quarter: 1,\n  earnings: 18000\n}, {\n  quarter: 2,\n  earnings: 13250\n}, {\n  quarter: 3,\n  earnings: 15000\n}, {\n  quarter: 4,\n  earnings: 12000\n}];\n\nclass Test extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      json: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://covidtracking.com/api/us/daily\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      json: data\n    }); // console.log(this.state.json[0]);\n    // console.log(typeof(this.state.json));\n    // allData.data = configData(data);\n    // allData.length = allData.data.length;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(VictoryChart, {\n      domainPadding: 20,\n      theme: VictoryTheme.material,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryAxis, {\n      tickValues: [1, 2, 3, 4],\n      tickFormat: [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `$${x / 1000}k`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VictoryStack, {\n      animate: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VictoryBar, {\n      data: data2012,\n      x: \"quarter\",\n      y: \"earnings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: data2012,\n      x: \"quarter\" //   y=\"i\"\n      ,\n      y: \"earnings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })));\n  }\n\n} //   ReactDOM.render(<Test/>, mountNode);\n\n\nexport default Test;","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/Test.js"],"names":["React","ReactDOM","VictoryChart","VictoryAxis","VictoryStack","VictoryBar","VictoryTheme","data2012","quarter","earnings","i","data2013","data2014","data2015","Test","Component","state","loading","json","componentDidMount","url","response","fetch","data","setState","render","material","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {VictoryChart, VictoryAxis, VictoryStack, VictoryBar, VictoryTheme} from 'victory';\n\nconst data2012 = [\n    {quarter: 1, earnings: 13000, i: 100},\n    {quarter: 2, earnings: 16500, i: 200},\n    {quarter: 3, earnings: 14250, i: 300},\n    {quarter: 4, earnings: 19000, i: 400}\n  ];\n  \n  const data2013 = [\n    {quarter: 1, earnings: 15000},\n    {quarter: 2, earnings: 12500},\n    {quarter: 3, earnings: 19500},\n    {quarter: 4, earnings: 13000}\n  ];\n  \n  const data2014 = [\n    {quarter: 1, earnings: 11500},\n    {quarter: 2, earnings: 13250},\n    {quarter: 3, earnings: 20000},\n    {quarter: 4, earnings: 15500}\n  ];\n  \n  const data2015 = [\n    {quarter: 1, earnings: 18000},\n    {quarter: 2, earnings: 13250},\n    {quarter: 3, earnings: 15000},\n    {quarter: 4, earnings: 12000}\n  ];\n  \n  class Test extends React.Component {\n\n    state = {\n        loading: true,\n        json: {}\n    };\n\n    async componentDidMount() {\n        const url = \"https://covidtracking.com/api/us/daily\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({loading: false, json: data});\n        // console.log(this.state.json[0]);\n        // console.log(typeof(this.state.json));\n        // allData.data = configData(data);\n        // allData.length = allData.data.length;\n    }\n    \n    render() {\n      return (\n        <VictoryChart\n          domainPadding={20}\n          theme={VictoryTheme.material}\n        >\n          <VictoryAxis\n            tickValues={[1, 2, 3, 4]}\n            tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n          />\n          <VictoryAxis\n            dependentAxis\n            tickFormat={(x) => (`$${x / 1000}k`)}\n          />\n          <VictoryStack\n          animate = {{}}\n          >\n            <VictoryBar\n              data={data2012}\n              x=\"quarter\"\n              y=\"earnings\"\n            />\n            <VictoryBar\n              data={data2012}\n              x=\"quarter\"\n            //   y=\"i\"\n              y=\"earnings\"\n            />\n            {/* <VictoryBar\n              data={data2014}\n              x=\"quarter\"\n              y=\"earnings\"\n            />\n            <VictoryBar\n              data={data2015}\n              x=\"quarter\"\n              y=\"earnings\"\n            /> */}\n          </VictoryStack>\n        </VictoryChart>\n      )\n    }\n  }\n  \n//   ReactDOM.render(<Test/>, mountNode);\n\n  export default Test;"]},"metadata":{},"sourceType":"module"}