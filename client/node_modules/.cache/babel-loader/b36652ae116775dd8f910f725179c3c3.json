{"ast":null,"code":"// import React from 'react';\n// import * as V from 'victory';\n// let allData = {data: {}, length: 0}\n// function configData(json) {\n//     console.log(json);\n//     const data = [];\n//     for (let i = json.length-1; i >= 0; i--){\n//         data.push({index: i, positive: json[json.length-1-i].positive, date: json[json.length-1-i].date});\n//     }\n//     console.log(data);\n//     return data;\n// }\n// function date(index, json){\n//     console.log(\"hm\" + JSON.stringify(json));\n//     return index;\n// }\n// export default class FetchData extends React.Component {\n//     state = {\n//         loading: true,\n//         json: {}\n//     };\n//     async componentDidMount() {\n//         const url = \"https://covidtracking.com/api/us/daily\";\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         this.setState({loading: false, json: data});\n//         console.log(this.state.json[0]);\n//         console.log(typeof(this.state.json));\n//         // allData.data = configData(data);\n//         // allData.length = allData.data.length;\n//     }\n//     render() {\n//         return (\n//             <V.VictoryChart\n//             // domainPadding={50}\n//             padding={100}\n//             theme={V.VictoryTheme.material}\n//             >\n//                 <V.VictoryAxis\n//                     // tickValues={[0, allData.length]}\n//                     // tickFormat={[0, allData.length]}\n//                     tickValues={[0, this.state.json.length]}\n//                     tickFormat={[0, date(this.state.json.length-1, this.state.json)]}\n//                     // tickValues={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n//                     // tickFormat={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n//                 ></V.VictoryAxis>\n//                 <V.VictoryAxis\n//                     dependentAxis\n//                     tickFormat={(x) => (`${x / 1000}k`)}\n//                 ></V.VictoryAxis>\n//                 <V.VictoryBar\n//                     // data={this.state.json}\n//                     // x=\"date\"\n//                     // y=\"positive\"\n//                     data={configData(this.state.json)}\n//                     x=\"index\"\n//                     y=\"positive\" \n//                 />\n//             </V.VictoryChart>\n//             // <div>\n//             //     {this.state.loading ? <div>loading...</div> : <div>{this.state.json[0].death} deaths</div>}\n//             // </div>\n//         );\n//     }\n// }","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import * as V from 'victory';\n\n// let allData = {data: {}, length: 0}\n\n// function configData(json) {\n//     console.log(json);\n//     const data = [];\n//     for (let i = json.length-1; i >= 0; i--){\n//         data.push({index: i, positive: json[json.length-1-i].positive, date: json[json.length-1-i].date});\n//     }\n//     console.log(data);\n//     return data;\n// }\n\n// function date(index, json){\n//     console.log(\"hm\" + JSON.stringify(json));\n//     return index;\n// }\n// export default class FetchData extends React.Component {\n//     state = {\n//         loading: true,\n//         json: {}\n//     };\n\n//     async componentDidMount() {\n//         const url = \"https://covidtracking.com/api/us/daily\";\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         this.setState({loading: false, json: data});\n//         console.log(this.state.json[0]);\n//         console.log(typeof(this.state.json));\n//         // allData.data = configData(data);\n//         // allData.length = allData.data.length;\n//     }\n\n    \n\n\n//     render() {\n//         return (\n           \n//             <V.VictoryChart\n//             // domainPadding={50}\n//             padding={100}\n//             theme={V.VictoryTheme.material}\n//             >\n//                 <V.VictoryAxis\n//                     // tickValues={[0, allData.length]}\n//                     // tickFormat={[0, allData.length]}\n//                     tickValues={[0, this.state.json.length]}\n//                     tickFormat={[0, date(this.state.json.length-1, this.state.json)]}\n//                     // tickValues={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n//                     // tickFormat={Array.from({length:this.state.json.length/10},(v,k)=>k+this.state.json.length/10)}\n//                 ></V.VictoryAxis>\n//                 <V.VictoryAxis\n//                     dependentAxis\n//                     tickFormat={(x) => (`${x / 1000}k`)}\n//                 ></V.VictoryAxis>\n//                 <V.VictoryBar\n//                     // data={this.state.json}\n//                     // x=\"date\"\n//                     // y=\"positive\"\n                   \n//                     data={configData(this.state.json)}\n//                     x=\"index\"\n//                     y=\"positive\" \n                    \n//                 />\n//             </V.VictoryChart>\n            \n//             // <div>\n//             //     {this.state.loading ? <div>loading...</div> : <div>{this.state.json[0].death} deaths</div>}\n//             // </div>\n//         );\n//     }\n// }"]},"metadata":{},"sourceType":"module"}