{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/USAData.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryTheme, VictoryVoronoiContainer, VictoryLabel, VictoryArea, VictoryLine, VictoryLegend, VictoryStack } from 'victory';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\n\nfunction configData(json) {\n  const data = [];\n  let endIdx = json.length - 1;\n\n  for (let i = endIdx; i >= 0; i--) {\n    let idx = endIdx - i;\n    let obj = json[idx];\n    let posIncr = i === 0 ? 0 : obj.positive - json[idx + 1].positive;\n    let recovIncr = i === 0 ? 0 : obj.recovered - json[idx + 1].recovered;\n    let deathIncr = i === 0 ? 0 : obj.death - json[idx + 1].death;\n    let state = obj.state ? '' : obj.state;\n    data.push({\n      index: i,\n      date: obj.date,\n      positive: obj.positive,\n      posIncr: posIncr,\n      recovered: obj.recovered,\n      recovIncr: recovIncr,\n      death: obj.death,\n      deathIncr: deathIncr,\n      state: state\n    });\n  }\n\n  return data;\n}\n\nfunction lineChartData(json, metric) {\n  let array = configData(json);\n  let lineData = array.map(obj => ({\n    x: obj.index,\n    y: obj[metric]\n  }));\n  return lineData;\n}\n\nfunction date(index, json) {\n  let date = json[json.length - 1 - index].date.toString();\n  date = date.substr(4, 2) + \"/\" + date.substr(6) + \"/\" + date.substr(0, 4);\n  return date;\n}\n\nexport default class USAData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      //NOTE: json objects ordered from most recent date to oldest date\n      json: {},\n      stateJson1: {},\n      stateJson2: {},\n      stateJson3: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleChange(event) {\n    try {\n      const stateUrl3 = \"https://covidtracking.com/api/v1/states/\" + event.target.value + \"/daily.json\";\n      const stateResponse3 = await fetch(stateUrl3);\n      const stateData3 = await stateResponse3.json();\n      this.setState({\n        stateJson3: stateData3\n      });\n    } catch {}\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        paddingLeft: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(VictoryChart, {\n      height: 400,\n      width: 400,\n      padding: 100,\n      theme: VictoryTheme.material,\n      animate: {\n        duration: 1000\n      },\n      containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n        labels: ({\n          datum\n        }) => `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }),\n      style: {\n        parent: {\n          maxWidth: \"30%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryLabel, {\n      fontSize: 10,\n      x: 200,\n      y: 60,\n      textAnchor: \"middle\",\n      text: \"USA: Number of Positive Cases over Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      style: sharedAxisStyles,\n      tickValues: [0, this.state.json.length],\n      tickFormat: [date(0, this.state.json), date(this.state.json.length - 1, this.state.json)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `${x / 1000}k`,\n      label: \"Number of New Cases\",\n      style: sharedAxisStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: configData(this.state.json),\n      x: \"index\",\n      y: \"positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/USAData.js"],"names":["React","VictoryChart","VictoryAxis","VictoryBar","VictoryTheme","VictoryVoronoiContainer","VictoryLabel","VictoryArea","VictoryLine","VictoryLegend","VictoryStack","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","configData","json","data","endIdx","length","i","idx","obj","posIncr","positive","recovIncr","recovered","deathIncr","death","state","push","index","date","lineChartData","metric","array","lineData","map","x","y","toString","substr","USAData","Component","constructor","props","loading","stateJson1","stateJson2","stateJson3","handleChange","bind","handleSubmit","event","stateUrl3","target","value","stateResponse3","fetch","stateData3","setState","preventDefault","componentDidMount","render","display","flexWrap","paddingLeft","material","duration","datum","parent","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryBar, \n     VictoryTheme, \n     VictoryVoronoiContainer,\n     VictoryLabel,\n     VictoryArea,\n     VictoryLine,\n     VictoryLegend,\n     VictoryStack,\n    } from 'victory';\n\nconst sharedAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 45,\n      fontSize: 10,\n      fontStyle: \"italic\"\n    }\n  };\n\nfunction configData(json) {\n    const data = [];\n    let endIdx = json.length-1;\n    for (let i = endIdx; i >= 0; i--){\n        let idx = endIdx-i;\n        let obj = json[idx];\n        let posIncr = (i===0 ? 0 : (obj.positive - json[idx+1].positive));\n        let recovIncr = (i===0 ? 0 : (obj.recovered - json[idx+1].recovered));\n        let deathIncr = (i===0 ? 0 : (obj.death - json[idx+1].death));\n        let state = (obj.state ? '' : obj.state);\n        data.push({\n            index: i,\n            date: obj.date,\n            positive: obj.positive, \n            posIncr: posIncr,\n            recovered: obj.recovered,\n            recovIncr: recovIncr,\n            death: obj.death,\n            deathIncr: deathIncr,\n            state: state\n        });\n    }\n    return data;\n}\n\nfunction lineChartData(json, metric) {\n    let array = configData(json);\n    let lineData = array.map(obj => ({x: obj.index, y: obj[metric]}));\n    return lineData;\n}\n\nfunction date(index, json){\n    let date = json[json.length-1-index].date.toString();\n    date = date.substr(4,2) + \"/\" + date.substr(6) + \"/\" + date.substr(0,4);\n    return date;\n}\nexport default class USAData extends React.Component {\n    state = {\n        loading: true,\n        //NOTE: json objects ordered from most recent date to oldest date\n        json: {},\n        stateJson1: {},\n        stateJson2: {},\n        stateJson3: {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleChange(event) {\n        try{\n            const stateUrl3 = \"https://covidtracking.com/api/v1/states/\" + event.target.value + \"/daily.json\";\n            const stateResponse3 = await fetch(stateUrl3);\n            const stateData3 = await stateResponse3.json();\n            this.setState({\n                stateJson3: stateData3\n            })\n        } catch {\n        }\n      }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async componentDidMount() {\n        this.setState({\n            loading: false,\n        });\n    }\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        return (\n\n        <> \n           <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: '10%' }}>\n\n            {/* Bar Chart: Change in Positive Cases of COVID-19 USA */}\n            <VictoryChart\n                height={400}\n                width={400}\n                padding={100}\n                theme={VictoryTheme.material}\n                animate={{\n                    duration: 1000\n                }}\n                containerComponent={\n                    <VictoryVoronoiContainer\n                    labels={({ datum }) => \n                    `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`\n                }\n                    />\n                }\n                style={{ parent: { maxWidth: \"30%\" } }}\n            >\n                 <VictoryLabel\n                    fontSize={10}\n                    x={200}\n                    y={60}\n                    textAnchor=\"middle\"\n                    text=\"USA: Number of Positive Cases over Time\"\n                />\n                <VictoryAxis\n                    style={sharedAxisStyles}\n                    tickValues={[0, this.state.json.length]}\n                    tickFormat={[date(0, this.state.json), date(this.state.json.length-1, this.state.json)]}\n                ></VictoryAxis>\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={(x) => (`${x / 1000}k`)}\n                    label=\"Number of New Cases\"\n                    style={sharedAxisStyles}\n                ></VictoryAxis>\n\n                <VictoryBar\n                    data={configData(this.state.json)}\n                    x=\"index\"\n                    y=\"positive\"          \n                />\n            </VictoryChart>\n            </div>\n            \n             </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}