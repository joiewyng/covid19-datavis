{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/data-vis/src/components/Test.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { VictoryChart, VictoryAxis, VictoryStack, VictoryBar, VictoryTheme } from 'victory';\nconst data2012 = [{\n  quarter: 1,\n  earnings: 13000,\n  i: 100\n}, {\n  quarter: 2,\n  earnings: 16500,\n  i: 200\n}, {\n  quarter: 3,\n  earnings: 14250,\n  i: 300\n}, {\n  quarter: 4,\n  earnings: 19000,\n  i: 400\n}];\nconst data2013 = [{\n  quarter: 1,\n  earnings: 15000\n}, {\n  quarter: 2,\n  earnings: 12500\n}, {\n  quarter: 3,\n  earnings: 19500\n}, {\n  quarter: 4,\n  earnings: 13000\n}];\nconst data2014 = [{\n  quarter: 1,\n  earnings: 11500\n}, {\n  quarter: 2,\n  earnings: 13250\n}, {\n  quarter: 3,\n  earnings: 20000\n}, {\n  quarter: 4,\n  earnings: 15500\n}];\nconst data2015 = [{\n  quarter: 1,\n  earnings: 18000\n}, {\n  quarter: 2,\n  earnings: 13250\n}, {\n  quarter: 3,\n  earnings: 15000\n}, {\n  quarter: 4,\n  earnings: 12000\n}];\n\nfunction configData(json) {\n  console.log(json);\n  const data = [];\n\n  for (let i = json.length - 1; i >= 0; i--) {\n    data.push({\n      index: i,\n      positive: json[json.length - 1 - i].positive\n    });\n  }\n\n  console.log(data);\n  return data;\n}\n\nfunction objectToArray(json) {\n  let array = [];\n\n  for (let i in json) {\n    let key = Object.keys(json)[i];\n    let obj = {};\n    obj[key] = json[i][key];\n    array.push(obj);\n  }\n\n  console.log('json' + JSON.stringify(json));\n  console.log('array' + array);\n  return array;\n}\n\nclass Test extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      data: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://covidtracking.com/api/us/daily\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      data: data\n    });\n    objectToArray(data); // console.log(this.state.json[0]);\n    // console.log(typeof(this.state.json));\n    // allData.data = configData(data);\n    // allData.length = allData.data.length;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(VictoryChart, {\n      domainPadding: 20,\n      theme: VictoryTheme.material,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryAxis // tickValues={[1, 2, 3, 4]}\n    // tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n    , {\n      tickValues: [0, this.state.json.length],\n      tickFormat: [0, this.state.json.length],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `$${x / 1000}k`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VictoryStack, {\n      animate: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VictoryBar //   data={data2012}\n    , {\n      data: configData(this.state.data),\n      x: \"date\",\n      y: \"positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })));\n  }\n\n} //   ReactDOM.render(<Test/>, mountNode);\n\n\nexport default Test;","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/Test.js"],"names":["React","ReactDOM","VictoryChart","VictoryAxis","VictoryStack","VictoryBar","VictoryTheme","data2012","quarter","earnings","i","data2013","data2014","data2015","configData","json","console","log","data","length","push","index","positive","objectToArray","array","key","Object","keys","obj","JSON","stringify","Test","Component","state","loading","componentDidMount","url","response","fetch","setState","render","material","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {VictoryChart, VictoryAxis, VictoryStack, VictoryBar, VictoryTheme} from 'victory';\n\nconst data2012 = [\n    {quarter: 1, earnings: 13000, i: 100},\n    {quarter: 2, earnings: 16500, i: 200},\n    {quarter: 3, earnings: 14250, i: 300},\n    {quarter: 4, earnings: 19000, i: 400}\n  ];\n  \n  const data2013 = [\n    {quarter: 1, earnings: 15000},\n    {quarter: 2, earnings: 12500},\n    {quarter: 3, earnings: 19500},\n    {quarter: 4, earnings: 13000}\n  ];\n  \n  const data2014 = [\n    {quarter: 1, earnings: 11500},\n    {quarter: 2, earnings: 13250},\n    {quarter: 3, earnings: 20000},\n    {quarter: 4, earnings: 15500}\n  ];\n  \n  const data2015 = [\n    {quarter: 1, earnings: 18000},\n    {quarter: 2, earnings: 13250},\n    {quarter: 3, earnings: 15000},\n    {quarter: 4, earnings: 12000}\n  ];\n\nfunction configData(json) {\n    console.log(json);\n    const data = [];\n    for (let i = json.length-1; i >= 0; i--){\n        data.push({index: i, positive: json[json.length-1-i].positive});\n    }\n    console.log(data);\n    return data;\n}\n\n  function objectToArray(json) {\n      let array = [];\n      for(let i in json){\n        let key = Object.keys(json)[i];\n        let obj = {};\n        obj[key] = json[i][key];\n        array.push(obj);\n      }\n      console.log('json' + JSON.stringify(json));\n\n      console.log('array' + array);\n      return array;\n  }\n  \n  class Test extends React.Component {\n\n    state = {\n        loading: true,\n        data: {}\n    };\n\n    async componentDidMount() {\n        const url = \"https://covidtracking.com/api/us/daily\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({loading: false, data: data});\n        objectToArray(data);\n        // console.log(this.state.json[0]);\n        // console.log(typeof(this.state.json));\n        // allData.data = configData(data);\n        // allData.length = allData.data.length;\n    }\n    \n    render() {\n      return (\n        <VictoryChart\n          domainPadding={20}\n          theme={VictoryTheme.material}\n        >\n          <VictoryAxis\n            // tickValues={[1, 2, 3, 4]}\n            // tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n            tickValues={[0, this.state.json.length]}\n            tickFormat={[0, this.state.json.length]}\n          />\n          <VictoryAxis\n            dependentAxis\n            tickFormat={(x) => (`$${x / 1000}k`)}\n          />\n          <VictoryStack\n          animate = {{}}\n          >\n            <VictoryBar\n            //   data={data2012}\n            data={configData(this.state.data)}\n              x=\"date\"\n              y=\"positive\"\n            />\n            {/* <VictoryBar\n              data={data2012}\n              x=\"quarter\"\n            //   y=\"i\"\n              y=\"earnings\"\n            /> */}\n            {/* <VictoryBar\n              data={data2014}\n              x=\"quarter\"\n              y=\"earnings\"\n            />\n            <VictoryBar\n              data={data2015}\n              x=\"quarter\"\n              y=\"earnings\"\n            /> */}\n          </VictoryStack>\n        </VictoryChart>\n      )\n    }\n  }\n  \n//   ReactDOM.render(<Test/>, mountNode);\n\n  export default Test;"]},"metadata":{},"sourceType":"module"}