{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js\";\nimport React from 'react';\nexport default class ManageData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.state = {\n      loading: true,\n      apiLink: '',\n      apiJson: '',\n      dbName: '',\n      deleteDb: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDeleteSubmit = this.handleDeleteSubmit.bind(this);\n  }\n\n  // pull data from API at [url], set to json, update state apiJson\n  async apiToJson(url) {\n    // await fetch(url).then(function(response){\n    //     return response.json();\n    // }).then(function(data){\n    //     console.log(data);\n    //     this.setState({loading: false, apiJson: data});\n    // }).catch(function(err){\n    //     console.log('unable to fetch data from API: ' + err);\n    // });\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log('GET API data: success'); // console.log(data);\n\n    this.setState({\n      loading: false,\n      apiJson: data\n    });\n  }\n\n  async handleSubmit(event) {\n    // console.log('handleSubmit for: ' + this.state.dbName);\n    event.preventDefault();\n    let url = this.state.apiLink;\n    await this.apiToJson(url);\n    await fetch(\"http://localhost:9000/testDB\", {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName,\n        json: this.state.apiJson\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('POST to NodeJS endpoint: success');\n      console.log(response);\n      return response.json();\n    }).catch(function (err) {\n      console.log('Failed to send form data to Node: \\n' + err);\n    });\n    alert('Creating a database with the following submission: \\n\\nAPI link: ' + url + '\\nDB name: ' + this.state.dbName);\n  }\n\n  async handleDeleteSubmit(event) {\n    // console.log('handleDelete for: ' + this.state.dbName);\n    event.preventDefault();\n    await this.setState({\n      deleteDb: true\n    });\n    let url = \"http://localhost:9000/testDB?delete=\" + this.state.deleteDb;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('post: success');\n      console.log(response);\n      return response;\n    }).catch(function (err) {\n      console.log('Failed to delete DB: \\n' + err);\n    });\n    alert('The following database will be deleted: ' + this.state.dbName);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        margin: 30\n      },\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"DB Name: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"dbName\",\n      value: this.state.dbName,\n      onChange: this.handleChange('dbName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"API Link: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"apiLink\",\n      value: this.state.apiLink,\n      onChange: this.handleChange('apiLink'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"initDB\",\n      value: \"Initialize Database\",\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDeleteSubmit,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Delete Database\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js"],"names":["React","ManageData","Component","constructor","props","handleChange","prop","event","setState","target","value","state","loading","apiLink","apiJson","dbName","deleteDb","bind","handleSubmit","handleDeleteSubmit","apiToJson","url","response","fetch","data","json","console","log","preventDefault","method","body","JSON","stringify","headers","then","catch","err","alert","render","margin"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default class ManageData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            apiLink: '',\n            apiJson: '',\n            dbName: '',\n            deleteDb: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDeleteSubmit = this.handleDeleteSubmit.bind(this);\n    }\n\n\n\n    handleChange = prop => (event) => {\n        this.setState({[prop]: event.target.value});\n    }\n    \n    // pull data from API at [url], set to json, update state apiJson\n    async apiToJson (url) {\n        // await fetch(url).then(function(response){\n        //     return response.json();\n        // }).then(function(data){\n        //     console.log(data);\n        //     this.setState({loading: false, apiJson: data});\n        // }).catch(function(err){\n        //     console.log('unable to fetch data from API: ' + err);\n        // });\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log('GET API data: success')\n        // console.log(data);\n        this.setState({loading: false, apiJson: data});\n    }\n\n    async handleSubmit(event) {\n        // console.log('handleSubmit for: ' + this.state.dbName);\n        event.preventDefault();\n        let url = this.state.apiLink;\n        await this.apiToJson(url);\n        await fetch(\"http://localhost:9000/testDB\", {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n                json: this.state.apiJson,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('POST to NodeJS endpoint: success')\n            console.log(response);\n            return response.json();\n          }).catch(function(err){\n              console.log('Failed to send form data to Node: \\n'+err);\n          });\n          alert('Creating a database with the following submission: \\n\\nAPI link: ' + url+'\\nDB name: '+this.state.dbName);\n    }\n\n    async handleDeleteSubmit(event) {\n        // console.log('handleDelete for: ' + this.state.dbName);\n        event.preventDefault();\n        await this.setState({deleteDb: true});\n        let url = \"http://localhost:9000/testDB?delete=\" + this.state.deleteDb;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('post: success')\n\n            console.log(response);\n            return response;\n          }).catch(function(err){\n              console.log('Failed to delete DB: \\n'+err);\n          });\n          alert('The following database will be deleted: '+this.state.dbName);\n        \n    }\n\n    render(){\n        return (\n            <form style={{margin: 30}} onSubmit={this.handleSubmit}>\n                <label style={{margin: 15}}>\n                    DB Name: &nbsp;\n                    <input type=\"text\" name=\"dbName\" value={this.state.dbName} onChange={this.handleChange('dbName')}/>\n                </label>\n                <label style={{margin: 15}}>\n                    API Link: &nbsp;\n                    <input type=\"text\" name=\"apiLink\" value={this.state.apiLink} onChange={this.handleChange('apiLink')}/>\n                </label>\n                <input type=\"submit\" name=\"initDB\" value=\"Initialize Database\" style={{margin: 15}}/>\n                {/* <input type=\"submit\" name=\"deleteDB\" value=\"Delete Database\" style={{margin: 15}}/> */}\n                <button onClick={this.handleDeleteSubmit} style={{margin: 15}}>Delete Database</button>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}