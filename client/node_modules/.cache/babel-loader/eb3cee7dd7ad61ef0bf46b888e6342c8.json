{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js\";\nimport React from 'react';\nimport BubbleChartDb from './BubbleChartDb';\nexport default class ManageData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      console.log('handleSubmit for: ' + this.state.dbName);\n      event.preventDefault();\n      let url = this.state.apiLink;\n      await this.apiToJson(url);\n      await fetch(\"http://localhost:9000/testDB\", {\n        method: 'POST',\n        body: JSON.stringify({\n          dbName: this.state.dbName,\n          json: this.state.apiJson\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        console.log('(init) POST to NodeJS endpoint: success');\n        return response.json();\n      }).then(function (json) {\n        // json (queried from MongoDB) has all the data from the api just submitted\n        // this.setState({dataJson: json});\n        // console.log(this.state.dataJson);\n        this.setState({\n          dataJson: json\n        });\n        console.log(json);\n        return json;\n      }).catch(function (err) {\n        console.log('Failed to send form data to Node: \\n' + err);\n      });\n      alert('Creating a database with the following submission: \\n\\nAPI link: ' + url + '\\nDB name: ' + this.state.dbName);\n    };\n\n    this.state = {\n      loading: true,\n      apiLink: '',\n      apiJson: '',\n      dbName: '',\n      deleteDb: false,\n      dataJson: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDeleteSubmit = this.handleDeleteSubmit.bind(this);\n    this.handleCountrySubmit = this.handleCountrySubmit.bind(this);\n  }\n\n  // pull data from API at [url], set to json, update state apiJson\n  async apiToJson(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log('GET API data: success');\n    this.setState({\n      loading: false,\n      apiJson: data\n    });\n  }\n\n  async handleDeleteSubmit(event) {\n    // console.log('handleDelete for: ' + this.state.dbName);\n    event.preventDefault();\n    await this.setState({\n      deleteDb: true\n    });\n    let url = \"http://localhost:9000/testDB?delete=\" + this.state.deleteDb;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('(del) POST to NodeJS endpoint: success');\n      return response.text();\n    }).then(string => {\n      console.log(\"response string:\");\n      console.log(string); // nothing: issue in testDB\n    }).catch(function (err) {\n      console.log('Failed to delete DB: \\n' + err);\n    });\n    alert('The following database will be deleted: ' + this.state.dbName);\n  }\n\n  async handleCountrySubmit(event) {\n    console.log('handleCountry for: ' + this.state.dbName);\n    event.preventDefault();\n    let url = \"http://localhost:9000/testDB?country=\" + this.state.country;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        dbName: this.state.dbName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      console.log('(country) POST to NodeJS endpoint: success');\n      console.log(response);\n      return response;\n    }).catch(function (err) {\n      console.log('Failed retrieve country data: \\n' + err);\n    });\n    alert('Retrieving data from: ' + this.state.dbName + ' on ' + this.state.country);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        margin: 30\n      },\n      onSubmit: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"DB Name: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"dbName\",\n      value: this.state.dbName,\n      onChange: this.handleChange('dbName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"API Link: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"apiLink\",\n      value: this.state.apiLink,\n      onChange: this.handleChange('apiLink'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"initDB\",\n      value: \"Initialize Database\",\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDeleteSubmit,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Delete Database\"), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Country: \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"apiLink\",\n      value: this.state.country,\n      onChange: this.handleChange('country'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleCountrySubmit,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, JSON.stringify(this.state.dataJson)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      style: {\n        margin: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Submit ?\")), /*#__PURE__*/React.createElement(BubbleChartDb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/covid19-datavis/client/src/components/ManageData.js"],"names":["React","BubbleChartDb","ManageData","Component","constructor","props","handleChange","prop","event","setState","target","value","handleSubmit","console","log","state","dbName","preventDefault","url","apiLink","apiToJson","fetch","method","body","JSON","stringify","json","apiJson","headers","then","response","dataJson","catch","err","alert","loading","deleteDb","bind","handleDeleteSubmit","handleCountrySubmit","data","text","string","country","render","margin","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,YApBmB,GAoBJC,IAAI,IAAKC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAAC,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAtBkB;;AAAA,SAiCnBC,YAjCmB,GAiCJ,MAAMJ,KAAN,IAAgB;AAC3BK,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuB,KAAKC,KAAL,CAAWC,MAA9C;AACAR,MAAAA,KAAK,CAACS,cAAN;AACA,UAAIC,GAAG,GAAG,KAAKH,KAAL,CAAWI,OAArB;AACA,YAAM,KAAKC,SAAL,CAAeF,GAAf,CAAN;AACA,YAAMG,KAAK,CAAC,8BAAD,EAAiC;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBT,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MADF;AAEjBU,UAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY;AAFA,SAAf,CAFkC;AAMxCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAN+B,OAAjC,CAAL,CAQHC,IARG,CAQE,UAASC,QAAT,EAAkB;AACtBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACA,eAAOgB,QAAQ,CAACJ,IAAT,EAAP;AACD,OAXG,EAWDG,IAXC,CAWI,UAASH,IAAT,EAAc;AACpB;AACA;AACA;AACA,aAAKjB,QAAL,CAAc;AAACsB,UAAAA,QAAQ,EAAEL;AAAX,SAAd;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,eAAOA,IAAP;AACD,OAlBG,EAkBDM,KAlBC,CAkBK,UAASC,GAAT,EAAa;AAClBpB,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAuCmB,GAAnD;AACH,OApBG,CAAN;AAqBEC,MAAAA,KAAK,CAAC,sEAAsEhB,GAAtE,GAA0E,aAA1E,GAAwF,KAAKH,KAAL,CAAWC,MAApG,CAAL;AACL,KA5DkB;;AAEf,SAAKD,KAAL,GAAa;AACToB,MAAAA,OAAO,EAAE,IADA;AAEThB,MAAAA,OAAO,EAAE,EAFA;AAGTQ,MAAAA,OAAO,EAAE,EAHA;AAITX,MAAAA,MAAM,EAAE,EAJC;AAKToB,MAAAA,QAAQ,EAAE,KALD;AAMTL,MAAAA,QAAQ,EAAE;AAND,KAAb;AASA,SAAKzB,YAAL,GAAoB,KAAKA,YAAL,CAAkB+B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKzB,YAAL,GAAoB,KAAKA,YAAL,CAAkByB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA3B;AAEH;;AAQD;AACA,QAAMjB,SAAN,CAAiBF,GAAjB,EAAsB;AAElB,UAAMY,QAAQ,GAAG,MAAMT,KAAK,CAACH,GAAD,CAA5B;AACA,UAAMsB,IAAI,GAAG,MAAMV,QAAQ,CAACJ,IAAT,EAAnB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAKL,QAAL,CAAc;AAAC0B,MAAAA,OAAO,EAAE,KAAV;AAAiBR,MAAAA,OAAO,EAAEa;AAA1B,KAAd;AACH;;AA+BD,QAAMF,kBAAN,CAAyB9B,KAAzB,EAAgC;AAC5B;AACAA,IAAAA,KAAK,CAACS,cAAN;AACA,UAAM,KAAKR,QAAL,CAAc;AAAC2B,MAAAA,QAAQ,EAAE;AAAX,KAAd,CAAN;AACA,QAAIlB,GAAG,GAAG,yCAAyC,KAAKH,KAAL,CAAWqB,QAA9D;AACA,UAAMf,KAAK,CAACH,GAAD,EAAM;AACbI,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBT,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AADF,OAAf,CAFO;AAKbY,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AALI,KAAN,CAAL,CAMHC,IANG,CAME,UAASC,QAAT,EAAkB;AACtBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,aAAOgB,QAAQ,CAACW,IAAT,EAAP;AACH,KATK,EASHZ,IATG,CASEa,MAAM,IAAI;AACd7B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY4B,MAAZ,EAFc,CAEO;AACxB,KAZK,EAYHV,KAZG,CAYG,UAASC,GAAT,EAAa;AAChBpB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA0BmB,GAAtC;AACH,KAdG,CAAN;AAeEC,IAAAA,KAAK,CAAC,6CAA2C,KAAKnB,KAAL,CAAWC,MAAvD,CAAL;AAEL;;AAED,QAAMuB,mBAAN,CAA0B/B,KAA1B,EAAiC;AAC7BK,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKC,KAAL,CAAWC,MAA/C;AACAR,IAAAA,KAAK,CAACS,cAAN;AACA,QAAIC,GAAG,GAAG,0CAA0C,KAAKH,KAAL,CAAW4B,OAA/D;AACA,UAAMtB,KAAK,CAACH,GAAD,EAAM;AACbI,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBT,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AADF,OAAf,CAFO;AAKbY,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AALI,KAAN,CAAL,CAOHC,IAPG,CAOE,UAASC,QAAT,EAAkB;AACtBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACA,aAAOA,QAAP;AACD,KAZG,EAYDE,KAZC,CAYK,UAASC,GAAT,EAAa;AAClBpB,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAmCmB,GAA/C;AACH,KAdG,CAAN;AAeEC,IAAAA,KAAK,CAAC,2BAAyB,KAAKnB,KAAL,CAAWC,MAApC,GAA2C,MAA3C,GAAkD,KAAKD,KAAL,CAAW4B,OAA9D,CAAL;AACL;;AAIDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAb;AAA2B,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKlC,YAAL,CAAkBkC,CAAlB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE;AAACD,QAAAA,MAAM,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWC,MAAnD;AAA2D,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkB,QAAlB,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAO,MAAA,KAAK,EAAE;AAACuC,QAAAA,MAAM,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWI,OAApD;AAA6D,MAAA,QAAQ,EAAE,KAAKb,YAAL,CAAkB,SAAlB,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,eASI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,KAAK,EAAC,qBAAzC;AAA+D,MAAA,KAAK,EAAE;AAACuC,QAAAA,MAAM,EAAE;AAAT,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAUI;AAAQ,MAAA,OAAO,EAAE,KAAKP,kBAAtB;AAA0C,MAAA,KAAK,EAAE;AAACO,QAAAA,MAAM,EAAE;AAAT,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVJ,eAWI;AAAO,MAAA,KAAK,EAAE;AAACA,QAAAA,MAAM,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAW4B,OAApD;AAA6D,MAAA,QAAQ,EAAE,KAAKrC,YAAL,CAAkB,SAAlB,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXJ,eAeI;AAAQ,MAAA,OAAO,EAAE,KAAKiC,mBAAtB;AAA2C,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE;AAAT,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMrB,IAAI,CAACC,SAAL,CAAe,KAAKV,KAAL,CAAWgB,QAA1B,CAAN,CAhBJ,eAiBI;AAAQ,MAAA,OAAO,EAAE,KAAKnB,YAAtB;AAAoC,MAAA,KAAK,EAAE;AAACiC,QAAAA,MAAM,EAAE;AAAT,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,CADJ,eAoBI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADJ;AAwBH;;AAxImD","sourcesContent":["import React from 'react';\nimport BubbleChartDb from './BubbleChartDb';\n\nexport default class ManageData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            apiLink: '',\n            apiJson: '',\n            dbName: '',\n            deleteDb: false,\n            dataJson: {},\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDeleteSubmit = this.handleDeleteSubmit.bind(this);\n        this.handleCountrySubmit = this.handleCountrySubmit.bind(this);\n        \n    }\n\n\n\n    handleChange = prop => (event) => {\n        this.setState({[prop]: event.target.value});\n    }\n    \n    // pull data from API at [url], set to json, update state apiJson\n    async apiToJson (url) {\n \n        const response = await fetch(url);\n        const data = await response.json();\n        console.log('GET API data: success')\n        this.setState({loading: false, apiJson: data});\n    }\n\n    handleSubmit = async(event) => {\n        console.log('handleSubmit for: ' + this.state.dbName);\n        event.preventDefault();\n        let url = this.state.apiLink;\n        await this.apiToJson(url);\n        await fetch(\"http://localhost:9000/testDB\", {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n                json: this.state.apiJson,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('(init) POST to NodeJS endpoint: success')\n            return response.json();\n          }).then(function(json){\n            // json (queried from MongoDB) has all the data from the api just submitted\n            // this.setState({dataJson: json});\n            // console.log(this.state.dataJson);\n            this.setState({dataJson: json});\n            console.log(json);\n            return json;\n          }).catch(function(err){\n              console.log('Failed to send form data to Node: \\n'+err);\n          });\n          alert('Creating a database with the following submission: \\n\\nAPI link: ' + url+'\\nDB name: '+this.state.dbName);\n    }\n\n    async handleDeleteSubmit(event) {\n        // console.log('handleDelete for: ' + this.state.dbName);\n        event.preventDefault();\n        await this.setState({deleteDb: true});\n        let url = \"http://localhost:9000/testDB?delete=\" + this.state.deleteDb;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(function(response){\n            console.log('(del) POST to NodeJS endpoint: success')\n            return response.text();\n        }).then(string => {\n            console.log(\"response string:\");\n            console.log(string); // nothing: issue in testDB\n        }).catch(function(err){\n              console.log('Failed to delete DB: \\n'+err);\n          });\n          alert('The following database will be deleted: '+this.state.dbName);\n        \n    }\n\n    async handleCountrySubmit(event) {\n        console.log('handleCountry for: ' + this.state.dbName);\n        event.preventDefault();\n        let url = \"http://localhost:9000/testDB?country=\" + this.state.country;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                dbName: this.state.dbName,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n          })\n          .then(function(response){\n            console.log('(country) POST to NodeJS endpoint: success')\n\n            console.log(response);\n            return response;\n          }).catch(function(err){\n              console.log('Failed retrieve country data: \\n'+err);\n          });\n          alert('Retrieving data from: '+this.state.dbName+' on '+this.state.country);\n    }\n\n\n\n    render(){\n        return (\n            <div>\n                <form style={{margin: 30}} onSubmit={(e) => this.handleSubmit(e)}>\n                    <label style={{margin: 15}}>\n                        DB Name: &nbsp;\n                        <input type=\"text\" name=\"dbName\" value={this.state.dbName} onChange={this.handleChange('dbName')}/>\n                    </label>\n                    <label style={{margin: 15}}>\n                        API Link: &nbsp;\n                        <input type=\"text\" name=\"apiLink\" value={this.state.apiLink} onChange={this.handleChange('apiLink')}/>\n                    </label>\n                    <input type=\"submit\" name=\"initDB\" value=\"Initialize Database\" style={{margin: 15}}/>\n                    <button onClick={this.handleDeleteSubmit} style={{margin: 15}}>Delete Database</button>\n                    <label style={{margin: 15}}>\n                        Country: &nbsp;\n                        <input type=\"text\" name=\"apiLink\" value={this.state.country} onChange={this.handleChange('country')}/>\n                    </label>\n                    <button onClick={this.handleCountrySubmit} style={{margin: 15}}>Search</button>\n                    <div>{JSON.stringify(this.state.dataJson)}</div>\n                    <button onClick={this.handleSubmit} style={{margin: 15}}>Submit ?</button>\n                </form>\n                <BubbleChartDb/>\n            </div> \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}