{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/covid19-datavis/client/src/components/WorldChart.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryScatter, createContainer } from 'victory';\nimport CountryChart from './CountryChart';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\nexport default class WorldChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      json: {},\n      countryCode: '',\n      firstLoad: true,\n      countryList: [{\n        value: '',\n        display: '-- Select a country --'\n      }],\n      selectedCountry: '',\n      totalDeaths: '',\n      totalRecovered: '',\n      totalConfirmed: '',\n      newCountryName: '',\n      newTotalDeaths: '',\n      newTotalRecovered: '',\n      newTotalConfirmed: ''\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    this.handleSave = this.handleSave.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleRestore = this.handleRestore.bind(this);\n    this.bubbleChartData = this.bubbleChartData.bind(this);\n    this.handleDeathsChange = this.handleDeathsChange.bind(this);\n    this.handleRecoveredChange = this.handleRecoveredChange.bind(this);\n    this.handleConfirmedChange = this.handleConfirmedChange.bind(this);\n    this.updateCountryData = this.updateCountryData.bind(this);\n    this.handleNewCountryName = this.handleNewCountryName.bind(this);\n    this.handleNewDeathsChange = this.handleNewDeathsChange.bind(this);\n    this.handleNewRecoveredChange = this.handleNewRecoveredChange.bind(this);\n    this.handleNewConfirmedChange = this.handleNewConfirmedChange.bind(this);\n    this.addCountry = this.addCountry.bind(this);\n  }\n\n  bubbleChartData(json, metric) {\n    // console.log(JSON.stringify(json[0]));\n    let array = json;\n    let bubbleData = array.map(obj => ({\n      x: obj[metric],\n      y: obj.TotalDeaths,\n      amount: obj.TotalConfirmed,\n      country: obj.Country,\n      countryCode: obj.CountryCode\n    })); // console.log(bubbleData);\n\n    return bubbleData;\n  } // handleChange(event) {\n  //     this.setState({\n  //         countryCode: event.target.value\n  //     });\n  //     console.log(event.target.value);\n  //     console.log(this.state.countryCode);\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  async callDB() {\n    await fetch(\"http://localhost:9000/worldDB\").then(res => {\n      return res.json();\n    }).then(json => {\n      this.setState({\n        json: Array.from(json)\n      });\n    }).catch(err => err);\n  }\n\n  findMax(array, prop) {\n    // if (array.length !== 0){\n    let maxObj = array.reduce((max, val) => val[prop] > max[prop] ? val : max);\n    let max = maxObj[prop];\n    console.log(max);\n    return max; // }\n  }\n\n  async handleReset(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB?reset=true\";\n    await fetch(url, {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      console.log('reset:');\n      console.log(JSON.stringify(dataJson));\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async handleRefresh(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB\";\n    await fetch(url).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async handleRestore(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB?restore=true\";\n    await fetch(url, {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      console.log('restore');\n      console.log(JSON.stringify(dataJson));\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async handleSave(event) {\n    event.preventDefault();\n    let url = \"http://localhost:9000/worldDB?save=true\";\n    await fetch(url, {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      console.log('saved');\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async loadCountries() {\n    let url = \"http://localhost:9000/worldDB/countrylist\";\n    await fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      let countryList = data.map(country => {\n        return {\n          value: country.Country,\n          display: country.Country\n        };\n      });\n      this.setState({\n        countryList: [{\n          value: '',\n          display: '-- Select a country --'\n        }].concat(countryList)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async loadCountryData() {\n    console.log('country data loaded');\n    let url = \"http://localhost:9000/worldDB/country?name=\" + this.state.selectedCountry;\n    await fetch(url).then(response => {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        totalRecovered: dataJson[0].TotalRecovered,\n        totalDeaths: dataJson[0].TotalDeaths,\n        totalConfirmed: dataJson[0].TotalConfirmed // countryData: dataJson,\n\n      });\n    }); // console.log(JSON.stringify(this.state.countryData));\n    // console.log(this.state.countryData[0].TotalDeaths);\n  }\n\n  handleDeathsChange(event) {\n    this.setState({\n      totalDeaths: Number(event.target.value)\n    });\n  }\n\n  handleRecoveredChange(event) {\n    this.setState({\n      totalRecovered: Number(event.target.value)\n    });\n  }\n\n  handleConfirmedChange(event) {\n    this.setState({\n      totalConfirmed: Number(event.target.value)\n    });\n  }\n\n  handleNewCountryName(event) {\n    console.log(event.target.value);\n    this.setState({\n      newCountryName: event.target.value\n    });\n  }\n\n  handleNewDeathsChange(event) {\n    this.setState({\n      newTotalDeaths: Number(event.target.value)\n    });\n  }\n\n  handleNewRecoveredChange(event) {\n    this.setState({\n      newTotalRecovered: Number(event.target.value)\n    });\n  }\n\n  handleNewConfirmedChange(event) {\n    this.setState({\n      newTotalConfirmed: Number(event.target.value)\n    });\n  }\n\n  async updateCountryDataRequest() {\n    let url = \"http://localhost:9000/worldDB/country?name=\" + this.state.selectedCountry;\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        totalDeaths: this.state.totalDeaths,\n        totalRecovered: this.state.totalRecovered,\n        totalConfirmed: this.state.totalConfirmed\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      console.log(Array.from(dataJson));\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async addCountryRequest() {\n    let url = \"http://localhost:9000/worldDB/addcountry\";\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        Country: this.state.newCountryName,\n        TotalConfirmed: this.state.newTotalConfirmed,\n        TotalDeaths: this.state.newTotalDeaths,\n        TotalRecovered: this.state.newTotalRecovered\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(dataJson => {\n      this.setState({\n        json: Array.from(dataJson)\n      });\n      console.log(JSON.stringify(dataJson));\n      return this.state.json;\n    }).catch(err => err);\n  }\n\n  async updateCountryData(event) {\n    event.preventDefault();\n    await this.updateCountryDataRequest();\n  }\n\n  async addCountry(event) {\n    event.preventDefault();\n    await this.addCountryRequest();\n  }\n\n  async componentDidMount() {\n    // // pulls data from public api on refresh\n    // if (this.state.firstLoad) {\n    //     const url = \"https://api.covid19api.com/summary\";\n    //     const response = await fetch(url);\n    //     const data = await response.json();\n    //     this.setState({loading: false, json: data.Countries, firstLoad: false});\n    // }\n    await this.callDB();\n    await this.loadCountries();\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    if (this.state.countryCode !== '') {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setState({\n          countryCode: ''\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }\n      }, \"Back to World Chart\"), /*#__PURE__*/React.createElement(CountryChart, {\n        countryCode: this.state.countryCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          padding: \"5%\",\n          marginTop: -50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(VictoryChart, {\n        style: {\n          parent: {\n            maxWidth: \"70%\"\n          }\n        },\n        height: 400,\n        width: 500,\n        padding: 100,\n        theme: VictoryTheme.material,\n        animate: {\n          duration: 1000\n        },\n        domain: {\n          x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x') * 1.2],\n          y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y') * 1.2]\n        },\n        containerComponent: /*#__PURE__*/React.createElement(VictoryZoomVoronoiContainer, {\n          zoomDomain: {\n            x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x') * 1.2],\n            y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y') * 1.2]\n          },\n          labels: ({\n            datum\n          }) => `${datum.country}: ${datum.amount} confirmed case(s)`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(VictoryLabel, {\n        fontSize: 10,\n        x: 250,\n        y: 60,\n        textAnchor: \"middle\",\n        text: \"World: Total Deaths vs Recoveries per Country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        style: sharedAxisStyles,\n        tickFormat: x => `${x / 1000}k`,\n        label: \"Total Recoveries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryAxis, {\n        dependentAxis: true,\n        tickFormat: (x, i, ticks) => `${x / 1000}k`,\n        label: \"Total Deaths\",\n        style: sharedAxisStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(VictoryScatter, {\n        style: {\n          data: {\n            fill: \"#c43a31\",\n            opacity: \"50%\"\n          }\n        },\n        bubbleProperty: \"amount\",\n        maxBubbleSize: 20,\n        minBubbleSize: 1,\n        data: this.bubbleChartData(this.state.json, 'TotalRecovered'),\n        events: [{\n          target: 'data',\n          eventHandlers: {\n            onClick: (event, data) => {\n              let cCode = data.datum.countryCode;\n              console.log(cCode);\n              this.setState({\n                countryCode: cCode\n              });\n            }\n          }\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: \"20%\",\n          marginTop: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSave,\n        style: {\n          margin: 10,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleReset,\n        style: {\n          margin: 10,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRestore,\n        style: {\n          margin: 10,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }\n      }, \"Restore\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          padding: 3,\n          margin: 20\n        },\n        value: this.state.selectedCountry,\n        onChange: async e => {\n          await this.setState({\n            selectedCountry: e.target.value\n          });\n\n          if (this.state.selectedCountry !== '') {\n            this.loadCountryData();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 29\n        }\n      }, \">\", console.log(this.state.selectedCountry), this.state.countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n        key: country.value,\n        value: country.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 33\n        }\n      }, country.display)))), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.updateCountryData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 33\n        }\n      }, \"Deaths:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.totalDeaths,\n        onChange: this.handleDeathsChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 33\n        }\n      }, \"Recovered:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.totalRecovered,\n        onChange: this.handleRecoveredChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 33\n        }\n      }, \"Confirmed:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.totalConfirmed,\n        onChange: this.handleConfirmedChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update\",\n        style: {\n          margin: 10,\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.addCountry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 55\n        }\n      }, \"Add a Country\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 33\n        }\n      }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newCountryName,\n        onChange: this.handleNewCountryName,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 33\n        }\n      }, \"Deaths:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newTotalDeaths,\n        onChange: this.handleNewDeathsChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 33\n        }\n      }, \"Recovered:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newTotalRecovered,\n        onChange: this.handleNewRecoveredChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          width: 70,\n          float: 'left',\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 33\n        }\n      }, \"Confirmed:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newTotalConfirmed,\n        onChange: this.handleNewConfirmedChange,\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        style: {\n          margin: 10,\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/covid19-datavis/client/src/components/WorldChart.js"],"names":["React","VictoryChart","VictoryAxis","VictoryTheme","VictoryLabel","VictoryScatter","createContainer","CountryChart","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","VictoryZoomVoronoiContainer","WorldChart","Component","constructor","props","state","loading","json","countryCode","firstLoad","countryList","value","display","selectedCountry","totalDeaths","totalRecovered","totalConfirmed","newCountryName","newTotalDeaths","newTotalRecovered","newTotalConfirmed","handleSave","bind","handleSubmit","handleRefresh","handleReset","handleRestore","bubbleChartData","handleDeathsChange","handleRecoveredChange","handleConfirmedChange","updateCountryData","handleNewCountryName","handleNewDeathsChange","handleNewRecoveredChange","handleNewConfirmedChange","addCountry","metric","array","bubbleData","map","obj","x","y","TotalDeaths","amount","TotalConfirmed","country","Country","CountryCode","event","preventDefault","callDB","fetch","then","res","setState","Array","from","catch","err","findMax","prop","maxObj","reduce","max","val","console","log","url","method","response","dataJson","JSON","stringify","loadCountries","data","concat","error","loadCountryData","TotalRecovered","Number","target","updateCountryDataRequest","body","headers","addCountryRequest","componentDidMount","render","flexWrap","marginTop","parent","maxWidth","material","duration","datum","i","ticks","fill","opacity","eventHandlers","onClick","cCode","minWidth","margin","e","width","float"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryTheme, \n     VictoryLabel,\n     VictoryScatter,\n     createContainer,\n    } from 'victory';\nimport CountryChart from './CountryChart'\n\nconst sharedAxisStyles = {\n    tickLabels: {\n        fontSize: 10\n    },\n    axisLabel: {\n        padding: 45,\n        fontSize: 10,\n        fontStyle: \"italic\"\n    }\n    };\n\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n    \n\n\nexport default class WorldChart extends React.Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n        loading: true,\n        json: {},\n        countryCode: '',\n        firstLoad: true,\n        countryList: [{value: '', display: '-- Select a country --'}],\n        selectedCountry: '',\n        totalDeaths: '',\n        totalRecovered: '',\n        totalConfirmed: '',\n        newCountryName: '',\n        newTotalDeaths: '',\n        newTotalRecovered: '',\n        newTotalConfirmed: '',\n    };\n        // this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleRefresh = this.handleRefresh.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleRestore = this.handleRestore.bind(this);\n        this.bubbleChartData = this.bubbleChartData.bind(this);\n        this.handleDeathsChange = this.handleDeathsChange.bind(this);\n        this.handleRecoveredChange = this.handleRecoveredChange.bind(this);\n        this.handleConfirmedChange = this.handleConfirmedChange.bind(this);\n        this.updateCountryData = this.updateCountryData.bind(this);\n        this.handleNewCountryName = this.handleNewCountryName.bind(this);\n        this.handleNewDeathsChange = this.handleNewDeathsChange.bind(this);\n        this.handleNewRecoveredChange = this.handleNewRecoveredChange.bind(this);\n        this.handleNewConfirmedChange = this.handleNewConfirmedChange.bind(this);\n        this.addCountry = this.addCountry.bind(this);\n    }\n\n    bubbleChartData(json, metric) {\n        // console.log(JSON.stringify(json[0]));\n        let array = json;\n        let bubbleData = array.map(obj => ({\n            x: obj[metric],\n            y: obj.TotalDeaths,  \n            amount: obj.TotalConfirmed, \n            country: obj.Country,\n            countryCode: obj.CountryCode\n        }));\n        // console.log(bubbleData);\n        return bubbleData;\n    }\n\n    // handleChange(event) {\n    //     this.setState({\n    //         countryCode: event.target.value\n    //     });\n    //     console.log(event.target.value);\n    //     console.log(this.state.countryCode);\n    // }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async callDB() {\n        await fetch(\"http://localhost:9000/worldDB\")\n            .then(res => {\n                return res.json();\n            }).then(json => {\n                this.setState({json: Array.from(json)});\n            }).catch(err => err);\n    }\n\n    findMax(array, prop){\n        // if (array.length !== 0){\n            let maxObj = array.reduce((max, val) => val[prop] > max[prop] ? val : max);\n            let max = maxObj[prop];\n            console.log(max);\n            return max;\n        // }\n    }\n\n    async handleReset(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB?reset=true\"\n        await fetch(url, {\n            method: 'POST'\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            console.log('reset:')\n            console.log(JSON.stringify(dataJson));\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async handleRefresh(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB\";\n        await fetch(url)\n        .then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async handleRestore(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB?restore=true\"\n        await fetch(url, {\n            method: 'POST'\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            console.log('restore');\n            console.log(JSON.stringify(dataJson));\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async handleSave(event) {\n        event.preventDefault();\n        let url = \"http://localhost:9000/worldDB?save=true\"\n        await fetch(url, {\n            method: 'POST'\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            console.log('saved');\n            return this.state.json\n        }).catch(err => err);\n    }\n\n\n\n   async loadCountries() {\n        let url = \"http://localhost:9000/worldDB/countrylist\";\n        await fetch(url)\n        .then((response) => {\n            return response.json();\n        }).then(data => {\n            let countryList = data.map(country => {\n              return {value: country.Country, display: country.Country}\n            });\n            this.setState({\n              countryList: [{value: '', display: '-- Select a country --'}].concat(countryList)\n            });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    async loadCountryData() {\n        console.log('country data loaded');\n        let url = \"http://localhost:9000/worldDB/country?name=\"+this.state.selectedCountry;\n        await fetch(url)\n        .then((response) => {\n            return response.json();\n        }).then(dataJson => {\n            this.setState({\n                totalRecovered: dataJson[0].TotalRecovered,\n                totalDeaths: dataJson[0].TotalDeaths,\n                totalConfirmed: dataJson[0].TotalConfirmed,\n                // countryData: dataJson,\n            })\n        })\n        \n        // console.log(JSON.stringify(this.state.countryData));\n        // console.log(this.state.countryData[0].TotalDeaths);\n    }\n\n    handleDeathsChange(event){\n        this.setState({totalDeaths: Number(event.target.value)});\n    }\n    handleRecoveredChange(event){\n        this.setState({totalRecovered:  Number(event.target.value)});\n    }\n    handleConfirmedChange(event){\n        this.setState({totalConfirmed:  Number(event.target.value)});\n    }\n    handleNewCountryName(event){\n        console.log(event.target.value);\n        this.setState({newCountryName: event.target.value});\n    }\n    handleNewDeathsChange(event){\n        this.setState({newTotalDeaths: Number(event.target.value)});\n    }\n    handleNewRecoveredChange(event){\n        this.setState({newTotalRecovered: Number(event.target.value)});\n    }\n    handleNewConfirmedChange(event){\n        this.setState({newTotalConfirmed: Number(event.target.value)});\n    }\n\n    async updateCountryDataRequest() {\n        let url = \"http://localhost:9000/worldDB/country?name=\"+this.state.selectedCountry;\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                totalDeaths: this.state.totalDeaths,\n                totalRecovered: this.state.totalRecovered,\n                totalConfirmed: this.state.totalConfirmed,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            console.log(Array.from(dataJson));\n            this.setState({json: Array.from(dataJson)});\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async addCountryRequest() {\n        let url = \"http://localhost:9000/worldDB/addcountry\";\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                Country: this.state.newCountryName,\n                TotalConfirmed: this.state.newTotalConfirmed,\n                TotalDeaths: this.state.newTotalDeaths,\n                TotalRecovered: this.state.newTotalRecovered,\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(function(response){\n            return response.json();\n        }).then(dataJson => {\n            this.setState({json: Array.from(dataJson)});\n            console.log(JSON.stringify(dataJson));\n            return this.state.json\n        }).catch(err => err);\n    }\n\n    async updateCountryData(event){\n        event.preventDefault();\n        await this.updateCountryDataRequest();\n    }\n\n    async addCountry(event){\n        event.preventDefault();\n        await this.addCountryRequest();\n    }\n\n    async componentDidMount() {\n        // // pulls data from public api on refresh\n        // if (this.state.firstLoad) {\n        //     const url = \"https://api.covid19api.com/summary\";\n        //     const response = await fetch(url);\n        //     const data = await response.json();\n        //     this.setState({loading: false, json: data.Countries, firstLoad: false});\n        // }\n        await this.callDB();\n        await this.loadCountries();\n        this.setState({loading: false});\n    }\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        if (this.state.countryCode !== ''){\n            return(\n                <>\n                <button onClick= {() => this.setState({countryCode: ''})}>Back to World Chart</button>\n\n                <CountryChart countryCode={this.state.countryCode}/>\n                </>\n            );\n        } else {\n            return (\n                <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"5%\", marginTop: -50 }}>\n                    <VictoryChart\n                        style={{ parent: { maxWidth: \"70%\" }}}\n                        height={400}\n                        width={500}\n                        padding={100}\n                        theme={\n                            VictoryTheme.material\n                        }\n                        animate={{\n                            duration: 1000\n                        }}\n                        domain={{\n                            x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x') * 1.2],\n                            y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y') * 1.2]\n                        }}\n                        containerComponent={\n                            <VictoryZoomVoronoiContainer \n                                zoomDomain={{\n                                    x: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'x')*1.2],\n                                    y: [0, this.findMax(this.bubbleChartData(this.state.json, 'TotalRecovered'), 'y')*1.2]\n                                }}\n                                labels={({ datum }) => `${datum.country}: ${datum.amount} confirmed case(s)`}\n                            />\n                        }\n                    >   \n                        <VictoryLabel\n                            fontSize={10}\n                            x={250}\n                            y={60}\n                            textAnchor=\"middle\"\n                            text=\"World: Total Deaths vs Recoveries per Country\"\n                        />\n                        <VictoryAxis\n                            style={sharedAxisStyles}\n                            tickFormat={(x) => (`${x / 1000}k`)}\n                            label=\"Total Recoveries\"\n                        ></VictoryAxis>\n                        <VictoryAxis\n                            dependentAxis\n                            tickFormat={(x, i, ticks) => (`${x / 1000}k`)}\n                            label=\"Total Deaths\"\n                            style={sharedAxisStyles}\n                        ></VictoryAxis>\n                        <VictoryScatter\n                            style={{ data: { fill: \"#c43a31\", opacity: \"50%\" } }}\n                            bubbleProperty=\"amount\"\n                            maxBubbleSize={20}\n                            minBubbleSize={1}\n                            data={this.bubbleChartData(this.state.json, 'TotalRecovered')}\n                            events={[{\n                                target: 'data',\n                                eventHandlers: {\n                                    onClick: (event, data) => {\n                                        let cCode = data.datum.countryCode\n                                        console.log(cCode);\n                                        this.setState({countryCode: cCode});\n                                    },\n                                },\n                            }]}\n                        >\n                        </VictoryScatter>\n                    </VictoryChart>\n                    <div style={{minWidth: \"20%\", marginTop: 80}}>\n                        {/* <button onClick={this.handleRefresh} style={{margin: 10, padding: 5}}>Refresh</button> */}\n                        <button onClick={this.handleSave} style={{margin: 10, padding: 5}}>Save</button>\n                        <button onClick={this.handleReset} style={{margin: 10, padding: 5}}>Reset</button>\n                        <button onClick={this.handleRestore} style={{margin: 10, padding: 5}}>Restore</button>\n                        <div>\n                            <select \n                                style={{padding:3, margin: 20}}\n                                value={this.state.selectedCountry}\n                                onChange={async(e) => {\n                                    await this.setState({selectedCountry: e.target.value});\n                                    if (this.state.selectedCountry !== ''){\n                                        this.loadCountryData();\n                                    }\n                                }}>\n                            >\n                                {console.log(this.state.selectedCountry)}\n                                {this.state.countryList.map((country) => \n                                <option key={country.value} value={country.value}>{country.display}</option>\n                                )}\n                            </select>\n                        </div>\n                        <form onSubmit={this.updateCountryData}>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Deaths:  \n                                </label>\n                                <input type=\"text\" value={this.state.totalDeaths} onChange={this.handleDeathsChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Recovered:\n                                </label>\n                                <input type=\"text\" value={this.state.totalRecovered} onChange={this.handleRecoveredChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Confirmed:\n                                </label>\n                                <input type=\"text\" value={this.state.totalConfirmed} onChange={this.handleConfirmedChange} style={{margin: 10}}/>\n                            </div>\n                            \n                            <input type=\"submit\" value=\"Update\" style={{margin: 10, float: 'right'}}/>\n                        </form>\n                        <br/><br/>\n                        <form onSubmit={this.addCountry}>\n                            <div style={{margin: 10}}><strong>Add a Country</strong></div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Name:  \n                                </label>\n                                <input type=\"text\" value={this.state.newCountryName} onChange={this.handleNewCountryName} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Deaths:  \n                                </label>\n                                <input type=\"text\" value={this.state.newTotalDeaths} onChange={this.handleNewDeathsChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Recovered:\n                                </label>\n                                <input type=\"text\" value={this.state.newTotalRecovered} onChange={this.handleNewRecoveredChange} style={{margin: 10}}/>\n                            </div>\n                            <div>\n                                <label style={{width: 70, float: 'left', margin: 10}}>\n                                    Confirmed:\n                                </label>\n                                <input type=\"text\" value={this.state.newTotalConfirmed} onChange={this.handleNewConfirmedChange} style={{margin: 10}}/>\n                            </div>\n                            \n                            <input type=\"submit\" value=\"Add\" style={{margin: 10, float: 'right'}}/>\n                        </form>\n                    </div>\n                </div>\n            ); \n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}