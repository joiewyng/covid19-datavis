{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryTheme, VictoryVoronoiContainer, VictoryLabel, VictoryLine } from 'victory';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\n\nfunction configData(json) {\n  console.log(json);\n  const data = [];\n  let endIdx = json.length - 1;\n\n  for (let i = endIdx; i >= 1; i--) {\n    let idx = endIdx - i;\n    let posIncr = i === 0 ? 0 : json[idx].positive - json[idx + 1].positive;\n    data.push({\n      index: i,\n      date: json[idx].date,\n      positive: json[idx].positive,\n      posIncr: posIncr,\n      recovered: json[idx].recovered\n    });\n  }\n\n  console.log('data' + JSON.stringify(data));\n  return data;\n}\n\nfunction lineChartData(json) {\n  let array = configData(json);\n  let lineData = array.map(obj => {\n    obj.recovered;\n  });\n  console.log(\"a;ldskjf\" + lineData); // console.log(lineData);\n  // return lineData;\n\n  return lineData;\n}\n\nfunction date(index, json) {\n  let date = json[index].date.toString();\n  date = date.substr(4, 2) + \"/\" + date.substr(6) + \"/\" + date.substr(0, 4);\n  return date;\n}\n\nexport default class FetchData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      json: {} //NOTE: json objects ordered from most recent date to oldest date\n\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://covidtracking.com/api/us/daily\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      json: data\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VictoryChart, {\n      height: 400,\n      width: 400,\n      padding: 100,\n      theme: VictoryTheme.material,\n      animate: {\n        duration: 500\n      },\n      containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n        labels: ({\n          datum\n        }) => `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryLabel, {\n      fontSize: 10,\n      x: 200,\n      y: 60,\n      textAnchor: \"middle\",\n      text: \"Change in Positive Cases of COVID-19 USA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      style: sharedAxisStyles,\n      tickValues: [0, this.state.json.length],\n      tickFormat: [date(this.state.json.length - 1, this.state.json), date(0, this.state.json)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `${x / 1000}k`,\n      label: \"Number of New Cases\",\n      style: sharedAxisStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: configData(this.state.json),\n      x: \"index\",\n      y: \"posIncr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(VictoryChart, {\n      height: 400,\n      width: 400,\n      padding: 100,\n      animate: {\n        duration: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryLine, {\n      interpolation: \"natural\",\n      data: lineChartData(this.state.json) // data={sampleData}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js"],"names":["React","VictoryChart","VictoryAxis","VictoryBar","VictoryTheme","VictoryVoronoiContainer","VictoryLabel","VictoryLine","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","configData","json","console","log","data","endIdx","length","i","idx","posIncr","positive","push","index","date","recovered","JSON","stringify","lineChartData","array","lineData","map","obj","toString","substr","FetchData","Component","state","loading","componentDidMount","url","response","fetch","setState","render","material","duration","datum","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryBar, \n     VictoryTheme, \n     VictoryVoronoiContainer,\n     VictoryLabel,\n        VictoryLine\n    } from 'victory';\n\nconst sharedAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 45,\n      fontSize: 10,\n      fontStyle: \"italic\"\n    }\n  };\n\nfunction configData(json) {\n    console.log(json);\n    const data = [];\n    let endIdx = json.length-1;\n    for (let i = endIdx; i >= 1; i--){\n        let idx = endIdx-i;\n        let posIncr = (i===0 ? 0 : (json[idx].positive - json[idx+1].positive));\n        data.push({\n            index: i,\n            date: json[idx].date,\n            positive: json[idx].positive, \n            posIncr: posIncr,\n            recovered: json[idx].recovered\n        });\n    }\n    console.log('data' + JSON.stringify(data));\n    return data;\n}\n\nfunction lineChartData(json) {\n    let array = configData(json);\n    let lineData = array.map(obj => {obj.recovered});\n    console.log(\"a;ldskjf\" + lineData);\n    // console.log(lineData);\n    // return lineData;\n    return lineData;\n}\n\nfunction date(index, json){\n    let date = json[index].date.toString();\n    date = date.substr(4,2) + \"/\" + date.substr(6) + \"/\" + date.substr(0,4);\n    return date;\n}\nexport default class FetchData extends React.Component {\n    state = {\n        loading: true,\n        json: {}\n        //NOTE: json objects ordered from most recent date to oldest date\n    };\n\n    async componentDidMount() {\n        const url = \"https://covidtracking.com/api/us/daily\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({loading: false, json: data});\n    }\n\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        return (\n           <> \n           {/* Bar Chart: Change in Positive Cases of COVID-19 USA */}\n            <VictoryChart\n            height={400}\n            width={400}\n            padding={100}\n            theme={VictoryTheme.material}\n            animate={{\n                duration: 500\n            }}\n            containerComponent={\n                <VictoryVoronoiContainer\n                  labels={({ datum }) => `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`}\n                />\n              }\n            >\n                 <VictoryLabel\n                    fontSize={10}\n                    x={200}\n                    y={60}\n                    textAnchor=\"middle\"\n                    text=\"Change in Positive Cases of COVID-19 USA\"\n                />\n                <VictoryAxis\n                    style={sharedAxisStyles}\n                    tickValues={[0, this.state.json.length]}\n                    tickFormat={[date(this.state.json.length-1, this.state.json), date(0, this.state.json)]}\n                ></VictoryAxis>\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={(x) => (`${x / 1000}k`)}\n                    label=\"Number of New Cases\"\n                    style={sharedAxisStyles}\n                ></VictoryAxis>\n\n                <VictoryBar\n                    data={configData(this.state.json)}\n                    x=\"index\"\n                    y=\"posIncr\"          \n                />\n            </VictoryChart>\n            \n            <VictoryChart\n                height={400}\n                width={400}\n                padding={100}\n                animate={{\n                    duration: 500\n                }}\n            >\n               \n            </VictoryChart>\n                <VictoryLine\n                interpolation=\"natural\"\n                data={lineChartData(this.state.json)}\n                // data={sampleData}\n                />\n             </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}