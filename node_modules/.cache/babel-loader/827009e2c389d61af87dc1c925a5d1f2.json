{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryTheme, VictoryVoronoiContainer, VictoryLabel } from 'victory';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 30,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\n\nfunction configData(json) {\n  console.log(json);\n  const data = [];\n\n  for (let i = json.length - 1; i >= 1; i--) {\n    let posIncr = i === 0 ? 0 : json[json.length - 1 - i].positive - json[json.length - i].positive;\n    data.push({\n      index: i,\n      positive: json[json.length - 1 - i].positive,\n      posIncr: posIncr,\n      date: json[json.length - 1 - i].date\n    });\n  }\n\n  console.log('data' + JSON.stringify(data));\n  return data;\n}\n\nfunction date(index, json) {\n  let date = json[index].date.toString();\n  date = date.substr(4, 2) + \"/\" + date.substr(6) + \"/\" + date.substr(0, 4);\n  return date;\n}\n\nexport default class FetchData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      json: {} //NOTE: json objects ordered from most recent date to oldest date\n\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://covidtracking.com/api/us/daily\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      json: data\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(VictoryChart, {\n      height: 400,\n      width: 400,\n      padding: 100,\n      theme: VictoryTheme.material,\n      animate: {},\n      containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n        labels: ({\n          datum\n        }) => `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryLabel, {\n      fontSize: 10,\n      x: 200,\n      y: 60,\n      textAnchor: \"middle\",\n      text: \"Change in Positive Cases of COVID-19 USA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      tickValues: [0, this.state.json.length],\n      tickFormat: [date(this.state.json.length - 1, this.state.json), date(0, this.state.json)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `${x / 1000}k`,\n      label: \"Number of New Cases\",\n      style: sharedAxisStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: configData(this.state.json),\n      x: \"index\",\n      y: \"posIncr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })) // <div>\n    //     {this.state.loading ? <div>loading...</div> : <div>{this.state.json[0].death} deaths</div>}\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/FetchData.js"],"names":["React","VictoryChart","VictoryAxis","VictoryBar","VictoryTheme","VictoryVoronoiContainer","VictoryLabel","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","configData","json","console","log","data","i","length","posIncr","positive","push","index","date","JSON","stringify","toString","substr","FetchData","Component","state","loading","componentDidMount","url","response","fetch","setState","render","material","datum","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {VictoryChart, VictoryAxis, VictoryBar, VictoryTheme, VictoryVoronoiContainer, VictoryLabel} from 'victory';\n\nconst sharedAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 30,\n      fontSize: 10,\n      fontStyle: \"italic\"\n    }\n  };\n\nfunction configData(json) {\n    console.log(json);\n    const data = [];\n    for (let i = json.length-1; i >= 1; i--){\n        let posIncr = (i===0 ? 0 : (json[json.length-1-i].positive - json[json.length-i].positive));\n        data.push({\n            index: i,\n            positive: json[json.length-1-i].positive, \n            posIncr: posIncr,\n            date: json[json.length-1-i].date\n        });\n    }\n    console.log('data' + JSON.stringify(data));\n    return data;\n}\n\nfunction date(index, json){\n    let date = json[index].date.toString();\n    date = date.substr(4,2) + \"/\" + date.substr(6) + \"/\" + date.substr(0,4);\n    return date;\n}\nexport default class FetchData extends React.Component {\n    state = {\n        loading: true,\n        json: {}\n        //NOTE: json objects ordered from most recent date to oldest date\n    };\n\n    async componentDidMount() {\n        const url = \"https://covidtracking.com/api/us/daily\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({loading: false, json: data});\n  \n    }\n\n    \n\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        return (\n           \n            <VictoryChart\n            height={400}\n            width={400}\n            padding={100}\n            theme={VictoryTheme.material}\n            animate={{}}\n            containerComponent={\n                <VictoryVoronoiContainer\n                  labels={({ datum }) => `${date(datum.index, this.state.json)}: ${datum.posIncr} new case(s)`}\n                />\n              }\n            >\n                 <VictoryLabel\n                    fontSize={10}\n                    x={200}\n                    y={60}\n                    textAnchor=\"middle\"\n                    text=\"Change in Positive Cases of COVID-19 USA\"\n                />\n                <VictoryAxis\n                    tickValues={[0, this.state.json.length]}\n                    tickFormat={[date(this.state.json.length-1, this.state.json), date(0, this.state.json)]}\n                ></VictoryAxis>\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={(x) => (`${x / 1000}k`)}\n                    label=\"Number of New Cases\"\n                    style={sharedAxisStyles}\n                ></VictoryAxis>\n\n                <VictoryBar\n                    data={configData(this.state.json)}\n                    x=\"index\"\n                    y=\"posIncr\"          \n                />\n            </VictoryChart>\n            \n            // <div>\n            //     {this.state.loading ? <div>loading...</div> : <div>{this.state.json[0].death} deaths</div>}\n            // </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}