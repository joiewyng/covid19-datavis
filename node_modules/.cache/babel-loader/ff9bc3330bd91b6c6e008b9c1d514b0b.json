{"ast":null,"code":"var _jsxFileName = \"/Users/i537493/Documents/repos/data-vis/src/components/BubbleChart.js\";\nimport React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryTheme, VictoryVoronoiContainer, VictoryLabel, VictoryStack, VictoryArea, VictoryScatter, VictoryZoomContainer } from 'victory';\nconst sharedAxisStyles = {\n  tickLabels: {\n    fontSize: 10\n  },\n  axisLabel: {\n    padding: 45,\n    fontSize: 10,\n    fontStyle: \"italic\"\n  }\n};\n\nfunction configData(json) {\n  return json.Countries;\n}\n\nfunction bubbleChartData(json, metric) {\n  let array = configData(json);\n  let bubbleData = array.map(obj => ({\n    x: obj.TotalDeaths,\n    y: obj[metric],\n    amount: obj.TotalConfirmed,\n    country: obj.Country\n  }));\n  console.log(bubbleData);\n  return bubbleData;\n}\n\nexport default class BubbleChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      json: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.covid19api.com/summary\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      loading: false,\n      json: data\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(VictoryChart, {\n      height: 400,\n      width: 400,\n      padding: 100,\n      theme: VictoryTheme.material,\n      animate: {\n        duration: 10000\n      },\n      containerComponent: /*#__PURE__*/React.createElement(VictoryZoomContainer, {\n        zoomDomain: {\n          x: [0, 10000],\n          y: [0, 500000]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VictoryAxis, {\n      style: sharedAxisStyles,\n      tickFormat: x => `${x / 1000}k`,\n      label: \"Total Recoveries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickFormat: x => `${x / 1000}k`,\n      label: \"Total Deaths\",\n      style: sharedAxisStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryScatter, {\n      style: {\n        data: {\n          fill: \"#c43a31\"\n        }\n      },\n      bubbleProperty: \"amount\",\n      maxBubbleSize: 25,\n      minBubbleSize: 1,\n      data: bubbleChartData(this.state.json, 'TotalRecovered'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/i537493/Documents/repos/data-vis/src/components/BubbleChart.js"],"names":["React","VictoryChart","VictoryAxis","VictoryBar","VictoryTheme","VictoryVoronoiContainer","VictoryLabel","VictoryStack","VictoryArea","VictoryScatter","VictoryZoomContainer","sharedAxisStyles","tickLabels","fontSize","axisLabel","padding","fontStyle","configData","json","Countries","bubbleChartData","metric","array","bubbleData","map","obj","x","TotalDeaths","y","amount","TotalConfirmed","country","Country","console","log","BubbleChart","Component","state","loading","componentDidMount","url","response","fetch","data","setState","render","material","duration","fill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n     VictoryChart,\n     VictoryAxis, \n     VictoryBar, \n     VictoryTheme, \n     VictoryVoronoiContainer,\n     VictoryLabel,\n     VictoryStack,\n     VictoryArea,\n     VictoryScatter,\n     VictoryZoomContainer\n    } from 'victory';\n\nconst sharedAxisStyles = {\n    tickLabels: {\n        fontSize: 10\n    },\n    axisLabel: {\n        padding: 45,\n        fontSize: 10,\n        fontStyle: \"italic\"\n    }\n    };\n\nfunction configData(json) {\n    return json.Countries;\n}\n    \nfunction bubbleChartData(json, metric) {\n    let array = configData(json);\n    let bubbleData = array.map(obj => ({x: obj.TotalDeaths, y: obj[metric], amount: obj.TotalConfirmed, country: obj.Country}));\n    console.log(bubbleData);\n    return bubbleData;\n}\n\nexport default class BubbleChart extends React.Component {\n    state = {\n        loading: true,\n        json: {}\n       \n    };\n\n    async componentDidMount() {\n        const url = \"https://api.covid19api.com/summary\";\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        this.setState({loading: false, json: data});\n    }\n\n    render() {\n        if (this.state.loading){\n            return(<div>loading...</div>);\n        }\n\n        return (\n\n            <VictoryChart\n            height={400}\n            width={400}\n            padding={100}\n            theme={\n                VictoryTheme.material\n            }\n            animate={{\n                duration: 10000\n            }}\n            containerComponent={\n             \n                <VictoryZoomContainer zoomDomain={{x: [0, 10000], y: [0, 500000]}}/>\n                \n              }\n            >\n            <VictoryAxis\n                style={sharedAxisStyles}\n                tickFormat={(x) => (`${x / 1000}k`)}\n                label=\"Total Recoveries\"\n            ></VictoryAxis>\n            <VictoryAxis\n                dependentAxis\n                tickFormat={(x) => (`${x / 1000}k`)}\n                label=\"Total Deaths\"\n                style={sharedAxisStyles}\n            ></VictoryAxis>\n            <VictoryScatter\n             style={{ data: { fill: \"#c43a31\" } }}\n             bubbleProperty=\"amount\"\n             maxBubbleSize={25}\n             minBubbleSize={1}\n             data={bubbleChartData(this.state.json, 'TotalRecovered')}\n             >\n\n            </VictoryScatter>\n            </VictoryChart>\n\n            ); \n    }\n}"]},"metadata":{},"sourceType":"module"}